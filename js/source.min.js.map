{"version":3,"file":"source.min.js","sources":["../bower_components/almond/almond.js","../bower_components/jquery/dist/jquery.min.js","../bower_components/underscore/underscore-min.js","../bower_components/backbone/backbone.js","entities/global.js","../bower_components/layoutmanager/backbone.layoutmanager.js","../dist/js/templates.min.js","app.js","../bower_components/backbone.wreqr/lib/backbone.wreqr.js","views/Questions.js","entities/questions.js","controllers/questions.js","views/question.js","controllers/question.js","controllers/helper.js","../bower_components/spin.js/spin.js","views/loading.js","controllers/loading.js","views/error.js","controllers/error.js","msgbus.js","router.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","a","b","document","window","this","s","c","type","isWindow","nodeType","x","isFunction","grep","d","w","filter","g","D","G","F","each","match","E","I","l","removeEventListener","ready","K","defineProperty","cache","get","expando","uid","P","O","toLowerCase","getAttribute","N","parseJSON","M","set","Z","$","_","activeElement","ja","nodeName","firstChild","getElementsByTagName","appendChild","ownerDocument","createElement","ka","la","ga","exec","removeAttribute","ma","L","na","h","hasData","access","events","handle","event","add","extend","oa","querySelectorAll","merge","pa","T","checked","defaultValue","sa","appendTo","body","getDefaultComputedStyle","display","css","detach","ta","ra","qa","documentElement","contentDocument","write","close","xa","style","wa","getPropertyValue","contains","va","ua","width","minWidth","maxWidth","ya","Fa","toUpperCase","Ea","Ga","Aa","Math","max","Ha","R","Ia","offsetWidth","offsetHeight","k","boxSizingReliable","parseFloat","Ja","S","Ka","init","Sa","La","now","Ta","height","opacity","Ua","Ra","Va","m","o","q","queue","_queueHooks","unqueued","empty","fire","always","overflow","overflowX","overflowY","Na","isEmptyObject","hidden","show","done","hide","remove","start","end","Wa","camelCase","isArray","cssHooks","expand","Xa","Qa","Deferred","elem","startTime","duration","tweens","run","notifyWith","resolveWith","promise","props","opts","specialEasing","originalProperties","originalOptions","createTween","Tween","easing","stop","rejectWith","fx","timer","anim","progress","complete","fail","qb","unshift","rb","dataTypes","mb","sb","ajaxSettings","flatOptions","tb","contents","shift","mimeType","getResponseHeader","converters","ub","responseFields","dataFilter","dataType","state","error","data","Ab","wb","Jb","defaultView","toString","fn","r","jquery","constructor","selector","toArray","pushStack","prevObject","context","first","eq","last","sort","isPlainObject","random","isReady","noop","Array","isNumeric","globalEval","eval","trim","text","head","parentNode","removeChild","makeArray","inArray","guid","proxy","Date","support","t","v","getElementById","H","getElementsByClassName","qsa","u","ba","setAttribute","aa","y","ha","cacheLength","ia","attrHandle","sourceIndex","C","nextSibling","dir","J","relative","matches","find","TAG","uniqueSort","z","A","B","pop","Q","RegExp","U","V","W","X","ID","CLASS","ATTR","PSEUDO","CHILD","bool","needsContext","Y","ca","da","String","fromCharCode","ea","childNodes","fa","isXML","setDocument","top","addEventListener","attachEvent","attributes","className","createComment","getById","getElementsByName","getAttributeNode","innerHTML","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","sortDetached","attr","specified","detectDuplicates","sortStable","getText","textContent","nodeValue","selectors","createPseudo",">"," ","+","~","preFilter","lastChild","pseudos","setFilters","not","has","innerText","lang","target","location","hash","root","focus","hasFocus","href","tabIndex","enabled","disabled","selected","selectedIndex","parent","header","input","button","even","odd","lt","gt","nth","radio","checkbox","file","password","image","submit","reset","filters","tokenize","compile","select","expr","unique","isXMLDoc","is","parseHTML","children","next","prev","sibling","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","reverse","Callbacks","once","memory","stopOnFalse","disable","lock","locked","fireWith","fired","then","resolve","reject","notify","pipe","when","readyWait","holdReady","triggerHandler","off","readyState","acceptData","accepts","key","defineProperties","discard","removeData","_data","_removeData","dequeue","clearQueue","source","createDocumentFragment","checkClone","cloneNode","noCloneChecked","focusinBubbles","global","handler","triggered","dispatch","special","delegateType","bindType","origType","namespace","delegateCount","setup","teardown","removeEvent","trigger","Event","isTrigger","namespace_re","result","noBubble","parentWindow","isPropagationStopped","preventDefault","isDefaultPrevented","_default","fix","delegateTarget","preDispatch","currentTarget","isImmediatePropagationStopped","handleObj","stopPropagation","postDispatch","fixHooks","keyHooks","which","charCode","keyCode","mouseHooks","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","blur","click","beforeunload","originalEvent","returnValue","simulate","isSimulated","defaultPrevented","timeStamp","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","relatedTarget","on","one","option","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","clone","buildFragment","createTextNode","cleanData","append","domManip","prepend","insertBefore","before","after","html","replaceWith","replaceChild","src","_evalUrl","prependTo","insertAfter","replaceAll","opener","getComputedStyle","cssText","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginRight","marginRight","swap","za","Ba","Ca","position","visibility","Da","letterSpacing","fontWeight","cssNumber","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","margin","padding","border","toggle","options","cur","unit","propHooks","pos","step","linear","swing","cos","PI","Ma","Oa","Pa","*","Animation","tweener","prefilter","speed","speeds","old","fadeTo","animate","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","tick","interval","setInterval","clearInterval","slow","fast","delay","clearTimeout","checkOn","optSelected","optDisabled","radioValue","Ya","Za","$a","removeAttr","attrHooks","propFix","_a","removeProp","for","class","hasAttribute","ab","addClass","removeClass","toggleClass","hasClass","bb","val","valHooks","hover","bind","unbind","delegate","undelegate","cb","db","JSON","parse","parseXML","DOMParser","parseFromString","eb","fb","gb","hb","ib","jb","kb","lb","nb","ob","pb","active","lastModified","etag","url","isLocal","processData","async","contentType","xml","json","* text","text html","text json","text xml","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","ifModified","status","statusText","statusCode","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","success","method","crossDomain","param","traditional","hasContent","headers","beforeSend","timeout","send","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","wrap","unwrap","visible","vb","xb","yb","zb","encodeURIComponent","serialize","serializeArray","xhr","XMLHttpRequest","Bb","Cb","Db",1223,"Eb","cors","open","username","xhrFields","onload","onerror","responseText","script","text script","charset","scriptCharset","Fb","Gb","jsonp","jsonpCallback","Hb","animated","Ib","offset","setOffset","left","using","getBoundingClientRect","pageYOffset","pageXOffset","offsetParent","scrollTo","Height","Width","content","size","andSelf","Kb","Lb","noConflict","keys","min","isNaN","Function","create","_wrapped","VERSION","identity","isObject","matcher","property","iteratee","pow","forEach","collect","reduce","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","negate","every","all","some","any","includes","include","values","invoke","pluck","where","findWhere","shuffle","sample","sortBy","criteria","groupBy","indexBy","countBy","partition","take","initial","rest","tail","drop","compact","isArguments","flatten","without","difference","uniq","isBoolean","union","intersection","zip","unzip","object","findLastIndex","sortedIndex","floor","lastIndexOf","range","ceil","TypeError","partial","bindAll","memoize","defer","throttle","leading","trailing","debounce","compose","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","extendOwn","assign","pick","omit","defaults","tap","isMatch","isEqual","isEmpty","isString","isElement","Int8Array","isFinite","isNumber","isNull","isUndefined","constant","propertyOf","times","getTime","&","<","\"","'","`","escape","unescape","uniqueId","templateSettings","evaluate","interpolate","\\","\r","\n"," "," ","template","variable","chain","_chain","mixin","valueOf","toJSON","factory","Backbone","Zepto","ender","previousBackbone","array","emulateHTTP","emulateJSON","Events","eventsApi","_events","ctx","self","_callback","retain","ev","names","allEvents","triggerEvents","stopListening","listeningTo","_listeningTo","_listenId","eventSplitter","action","a1","a2","a3","listenMethods","listenTo","listenToOnce","implementation","Model","attrs","cid","collection","changed","initialize","validationError","idAttribute","sync","unset","changes","silent","changing","current","_validate","_changing","_previousAttributes","_pending","clear","hasChanged","changedAttributes","diff","previous","previousAttributes","fetch","model","resp","wrapError","save","validate","wait","serverAttrs","isNew","patch","destroy","base","urlError","isValid","modelMethods","Collection","models","comparator","_reset","setOptions","addOptions","singular","_byId","_removeReference","existing","at","targetModel","sortable","sortAttr","toAdd","toRemove","modelMap","_prepareModel","_addReference","orderedModels","previousModels","_onModelEvent","attributeMethods","iterator","View","viewOptions","_ensureElement","delegateEvents","delegateEventSplitter","tagName","$el","render","setElement","element","undelegateEvents","el","eventName","methodMap","params","stringify","_method","noXhrPatch","ActiveXObject","dispatchEvent","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","decodeURIComponent","History","routeStripper","rootStripper","isExplorer","trailingSlash","pathStripper","started","atRoot","pathname","getHash","getFragment","forcePushState","_hasPushState","_wantsHashChange","decodeURI","search","hashChange","_wantsPushState","pushState","docMode","documentMode","oldIE","navigator","userAgent","frame","iframe","contentWindow","checkUrl","_checkUrlInterval","loc","replaceState","title","loadUrl","_updateHash","protoProps","staticProps","child","Surrogate","__super__","Entities","Global","questionID","ViewConstructor","aPush","aConcat","aSplice","LayoutManager","_render","view","manager","__manager__","beforeRender","def","deferred","hasRendered","_removeViews","isAsync","_viewRender","_applyTemplate","rendered","noel","renderTemplate","fetchTemplate","manage","renderDeferred","renderViews","views","newDeferred","getViews","promises","insertView","setView","insertViews","setViews","getView","sections","removeView","nestedView","insert","completeRender","console","afterRender","warn","suppressWarnings","trace","htmlBatch","insertedViaFragment","rentManager","renderInProgress","triggeredByRAF","actuallyRender","subView","_registerWithRAF","_removeView","_remove","rafID","resolveDeferreds","deferreds","useRAF","_cancelQueuedRAFRender","requestAnimationFrame","cancelAnimationFrame","_cache","force","parentViews","keep","cleanViews","path","cleanup","configure","setupView","declaredViews","proto","declaredView","Layout","defaultOptions","$root","$filtered","rootView","subViews","els","memo","sub","exists","lastTime","vendors","currTime","timeToCall","__p","__e","message","app","globalModel","JST","layout","previousWreqr","Wreqr","Handlers","_wreqrHandlers","setHandlers","setHandler","hasHandler","getHandler","removeHandler","removeAllHandlers","CommandStorage","_commands","getCommands","commandName","commands","command","instances","addCommand","clearCommands","Commands","storageType","_initializeStorage","_executeCommands","storage","StorageType","RequestResponse","request","EventAggregator","EA","Channel","channelName","vent","reqres","connectEvents","_connect","connectCommands","connectRequests","Radio","_channels","_proxyMethods","channel","_getChannel","system","messageSystems","proxyMethod","messageSystem","QuestionsView","msgBus","QuestionItem","showQuestion","log","item","Question","tags","owner","is_answered","view_count","accepted_answer_id","answer_count","score","last_activity_date","creation_date","last_edit_date","link","QuestionCollection","response","items","API","getQuestionsEntities","jqXHR","textStatus","controller","getQuestions","fetchingQuestions","questions","QuestionView","QuestionDetails","getQuestion","questionId","fetchingQuestion","question","helperModule","Spinner","createEl","tag","ins","addAnimation","alpha","trail","lines","useCssAnimations","pre","animations","sheet","insertRule","cssRules","vendor","pp","prefixes","getColor","color","idx","initVML","vml","addRule","grp","coordsize","coordorigin","seg","dx","rotation","arcsize","corners","scale","radius","shadow","rotate","direction","fps","hwaccel","spin","ostep","astep","fill","background","boxShadow","transformOrigin","transform","borderRadius","animation","styleSheet","probe","behavior","adj","LoadingViewModule","LoadingView","loadinglModule","ErrorModule","ErrorView","errorModule","question/:id","errorPage","protocol","host"],"mappings":"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,GACA,YAIAqJ,GAAA3I,OAAA,GAAAV,GAIArH,SAAAgI,QAAA7zB,OAAAs1B,WAAA,EAAA5pB,KAAA,2BAMAnS,EAAAxC,UAAA4d,GAAA,QAAA,6BAAA,SAAAhf,GAEA,GAAAkW,IAAAva,KAAAiI,EAAAtC,MAAA3F,KAAA,QAAA4Y,KAAA3Q,EAAAtC,MAAAiT,KAAA,SAEAwB,EAAAF,SAAAi6B,SAAA,KAAAj6B,SAAAk6B,KAAAnJ,EAAA7wB,IAGAG,GAAAva,KAAA4B,MAAA,EAAAwY,EAAA7Y,UAAA6Y,IAGA/V,EAAAwc,iBAKA0Z,SAAAgI,QAAAI,SAAApoB,EAAA3B,MAAA,QAKAhZ,OAAA,OAAA;AtjbzkoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA,ADkEA;ACjzbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA,ADuDA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA,ADqEA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA,ADyCA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjvCA,ADwCA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA,AD4BA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA,ADmCA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../bower_components/almond/almond\", function(){});\n\n","/*! jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m=\"2.1.4\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return!n.isArray(a)&&a-parseFloat(a)+1>=0},isPlainObject:function(a){return\"object\"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\")?!1:!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=l.createElement(\"script\"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",L=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",M=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",N=M.replace(\"w\",\"w#\"),O=\"\\\\[\"+L+\"*(\"+M+\")(?:\"+L+\"*([*^$|!~]?=)\"+L+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+N+\"))|)\"+L+\"*\\\\]\",P=\":(\"+M+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+O+\")*)|.*)\\\\)|)\",Q=new RegExp(L+\"+\",\"g\"),R=new RegExp(\"^\"+L+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+L+\"+$\",\"g\"),S=new RegExp(\"^\"+L+\"*,\"+L+\"*\"),T=new RegExp(\"^\"+L+\"*([>+~]|\"+L+\")\"+L+\"*\"),U=new RegExp(\"=\"+L+\"*([^\\\\]'\\\"]*?)\"+L+\"*\\\\]\",\"g\"),V=new RegExp(P),W=new RegExp(\"^\"+N+\"$\"),X={ID:new RegExp(\"^#(\"+M+\")\"),CLASS:new RegExp(\"^\\\\.(\"+M+\")\"),TAG:new RegExp(\"^(\"+M.replace(\"w\",\"w*\")+\")\"),ATTR:new RegExp(\"^\"+O),PSEUDO:new RegExp(\"^\"+P),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+L+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+L+\"*(?:([+-]|)\"+L+\"*(\\\\d+)|))\"+L+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+K+\")$\",\"i\"),needsContext:new RegExp(\"^\"+L+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+L+\"*((?:-\\\\d)?\\\\d*)\"+L+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\\d$/i,$=/^[^{]+\\{\\s*\\[native \\w/,_=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,aa=/[+~]/,ba=/'|\\\\/g,ca=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+L+\"?|(\"+L+\")|.)\",\"ig\"),da=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ea=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(fa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],k=b.nodeType,\"string\"!=typeof a||!a||1!==k&&9!==k&&11!==k)return d;if(!e&&p){if(11!==k&&(f=_.exec(a)))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return H.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName)return H.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=1!==k&&a,1===k&&\"object\"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute(\"id\"))?s=r.replace(ba,\"\\\\$&\"):b.setAttribute(\"id\",s),s=\"[id='\"+s+\"'] \",l=o.length;while(l--)o[l]=s+ra(o[l]);w=aa.test(a)&&pa(b.parentNode)||b,x=o.join(\",\")}if(x)try{return H.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute(\"id\")}}}return i(a.replace(R,\"$1\"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split(\"|\"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function oa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function pa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=g.documentElement,e=g.defaultView,e&&e!==e.top&&(e.addEventListener?e.addEventListener(\"unload\",ea,!1):e.attachEvent&&e.attachEvent(\"onunload\",ea)),p=!f(g),c.attributes=ja(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ja(function(a){return a.appendChild(g.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=$.test(g.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!g.getElementsByName||!g.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ca,da);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(g.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\f]' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+L+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+L+\"*(?:value|\"+K+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ja(function(a){var b=g.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+L+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",P)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===g||a.ownerDocument===v&&t(v,a)?-1:b===g||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,h=[a],i=[b];if(!e||!f)return a===g?-1:b===g?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?la(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},g):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,\"='$1']\"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:X,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ca,da),a[3]=(a[3]||a[4]||a[5]||\"\").replace(ca,da),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ca,da).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+L+\")\"+a+\"(\"+L+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(Q,\" \")+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(R,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(ca,da),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return W.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(ca,da).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:oa(function(){return[0]}),last:oa(function(a,b){return[b-1]}),eq:oa(function(a,b,c){return[0>c?c+b:c]}),even:oa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:oa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:oa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:oa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function qa(){}qa.prototype=d.filters=d.pseudos,d.setFilters=new qa,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function ra(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function sa(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function ta(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ua(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function va(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function wa(a,b,c,d,e,f){return d&&!d[u]&&(d=wa(d)),e&&!e[u]&&(e=wa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ua(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:va(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=va(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=va(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function xa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=sa(function(a){return a===b},h,!0),l=sa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[sa(ta(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return wa(i>1&&ta(m),i>1&&ra(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(R,\"$1\"),c,e>i&&xa(a.slice(i,e)),f>e&&xa(a=a.slice(e)),f>e&&ra(a))}m.push(c)}return ta(m)}function ya(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q=\"0\",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG(\"*\",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=F.call(i));s=va(s)}H.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&ga.uniqueSort(i)}return k&&(w=v,j=t),r};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=xa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,ya(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ca,da),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ca,da),aa.test(j[0].type)&&pa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&ra(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,aa.test(a)&&pa(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ja(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ka(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ka(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute(\"disabled\")})||ka(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,w=/^.[^:#\\[\\.,]*$/;function x(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(w.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return!!x(this,\"string\"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a)return this;if(\"string\"==typeof a){if(c=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||y).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b))for(c in b)n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?\"undefined\"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?\"string\"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,\"parentNode\")},parentsUntil:function(a,b,c){return n.dir(a,\"parentNode\",c)},next:function(a){return D(a,\"nextSibling\")},prev:function(a){return D(a,\"previousSibling\")},nextAll:function(a){return n.dir(a,\"nextSibling\")},prevAll:function(a){return n.dir(a,\"previousSibling\")},nextUntil:function(a,b,c){return n.dir(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return n.dir(a,\"previousSibling\",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++)if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);\"function\"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&\"string\"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1)h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return!i},fireWith:function(a,b){return!h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!c}};return k},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler(\"ready\"),n(l).off(\"ready\"))))}});function I(){l.removeEventListener(\"DOMContentLoaded\",I,!1),a.removeEventListener(\"load\",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),\"complete\"===l.readyState?setTimeout(n.ready):(l.addEventListener(\"DOMContentLoaded\",I,!1),a.addEventListener(\"load\",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)n.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+K.uid++}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a))return 0;var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if(\"string\"==typeof b)f[b]=c;else if(n.isEmptyObject(f))n.extend(this.cache[e],b);else for(d in b)f[d]=b[d];return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b)this.cache[f]={};else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--)delete g[d[c]]}},hasData:function(a){return!n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(O,\"-$1\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){\nreturn M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));L.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c)return c;if(c=M.get(f,d),void 0!==c)return c;if(c=P(f,d,void 0),void 0!==c)return c}else this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf(\"-\")&&void 0!==c&&M.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){L.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=L.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var Q=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,R=[\"Top\",\"Right\",\"Bottom\",\"Left\"],S=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement(\"div\")),c=l.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U=\"undefined\";k.focusinBubbles=\"onfocusin\"in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\\.(.+)|)$/;function Z(){return!0}function $(){return!1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||\"\").match(E)||[\"\"],j=b.length;while(j--)if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&(delete r.handle,L.remove(a,\"events\"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,\"type\")?b.type:b,r=j.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(\".\")>=0&&(r=q.split(\".\"),q=r.shift(),r.sort()),k=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join(\".\"),b.namespace_re=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode)p.push(g),h=g;h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped())b.type=f>1?i:o.bindType||q,m=(L.get(g,\"events\")||{})[b.type]&&L.get(g,\"handle\"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault());return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||\"click\"!==a.type))for(;i!==this;i=i.parentNode||this)if(i.disabled!==!0||\"click\"!==a.type){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if(\"object\"==typeof a){\"string\"!=typeof b&&(c=c||b,b=void 0);for(g in a)this.on(g,b,c,a[g],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&(\"string\"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=$;else if(!d)return this;return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||\"function\"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var aa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,ba=/<([\\w:]+)/,ca=/<|&#?\\w+;/,da=/<(?:script|style|link)/i,ea=/checked\\s*(?:[^=]|=\\s*.checked.)/i,fa=/^$|\\/(?:java|ecma)script/i,ga=/^true\\/(.*)/,ha=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ia={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ia.optgroup=ia.option,ia.tbody=ia.tfoot=ia.colgroup=ia.caption=ia.thead,ia.th=ia.td;function ja(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function ka(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function la(a){var b=ga.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function ma(a,b){for(var c=0,d=a.length;d>c;c++)L.set(a[c],\"globalEval\",!b||L.get(b[c],\"globalEval\"))}function na(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function oa(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pa(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&T.test(a.type)?b.checked=a.checked:(\"input\"===c||\"textarea\"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=oa(h),f=oa(a),d=0,e=f.length;e>d;d++)pa(f[d],g[d]);if(b)if(c)for(f=f||oa(a),g=g||oa(h),d=0,e=f.length;e>d;d++)na(f[d],g[d]);else na(a,h);return g=oa(h,\"script\"),g.length>0&&ma(g,!i&&oa(a,\"script\")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++)if(e=a[m],e||0===e)if(\"object\"===n.type(e))n.merge(l,e.nodeType?[e]:e);else if(ca.test(e)){f=f||k.appendChild(b.createElement(\"div\")),g=(ba.exec(e)||[\"\",\"\"])[1].toLowerCase(),h=ia[g]||ia._default,f.innerHTML=h[1]+e.replace(aa,\"<$1></$2>\")+h[2],j=h[0];while(j--)f=f.lastChild;n.merge(l,f.childNodes),f=k.firstChild,f.textContent=\"\"}else l.push(b.createTextNode(e));k.textContent=\"\",m=0;while(e=l[m++])if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=oa(k.appendChild(e),\"script\"),i&&ma(f),c)){j=0;while(e=f[j++])fa.test(e.type||\"\")&&c.push(e)}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events)for(d in b.events)f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=ja(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||n.cleanData(oa(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&ma(oa(c,\"script\")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(oa(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!da.test(a)&&!ia[(ba.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(aa,\"<$1></$2>\");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(oa(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(oa(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&\"string\"==typeof p&&!k.checkClone&&ea.test(p))return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(oa(c,\"script\"),ka),g=f.length;l>j;j++)h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,oa(h,\"script\"))),b.call(this[j],h,j);if(g)for(i=f[f.length-1].ownerDocument,n.map(f,la),j=0;g>j;j++)h=f[j],fa.test(h.type||\"\")&&!L.access(h,\"globalEval\")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(ha,\"\")))}return this}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++)c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get());return this.pushStack(d)}});var qa,ra={};function sa(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],\"display\");return e.detach(),f}function ta(a){var b=l,c=ra[a];return c||(c=sa(a,b),\"none\"!==c&&c||(qa=(qa||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=qa[0].contentDocument,b.write(),b.close(),c=sa(a,b),qa.detach()),ra[a]=c),c}var ua=/^margin/,va=new RegExp(\"^(\"+Q+\")(?!px)[a-z%]+$\",\"i\"),wa=function(b){return b.ownerDocument.defaultView.opener?b.ownerDocument.defaultView.getComputedStyle(b,null):a.getComputedStyle(b,null)};function xa(a,b,c){var d,e,f,g,h=a.style;return c=c||wa(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(\"\"!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),va.test(g)&&ua.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+\"\":g}function ya(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement(\"div\"),f=l.createElement(\"div\");if(f.style){f.style.backgroundClip=\"content-box\",f.cloneNode(!0).style.backgroundClip=\"\",k.clearCloneStyle=\"content-box\"===f.style.backgroundClip,e.style.cssText=\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute\",e.appendChild(f);function g(){f.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute\",f.innerHTML=\"\",d.appendChild(e);var g=a.getComputedStyle(f,null);b=\"1%\"!==g.top,c=\"4px\"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement(\"div\"));return c.style.cssText=f.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",f.style.width=\"1px\",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),f.removeChild(c),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var za=/^(none|table(?!-c[ea]).+)/,Aa=new RegExp(\"^(\"+Q+\")(.*)$\",\"i\"),Ba=new RegExp(\"^([+-])=(\"+Q+\")\",\"i\"),Ca={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Da={letterSpacing:\"0\",fontWeight:\"400\"},Ea=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function Fa(a,b){if(b in a)return b;var c=b[0].toUpperCase()+b.slice(1),d=b,e=Ea.length;while(e--)if(b=Ea[e]+c,b in a)return b;return d}function Ga(a,b,c){var d=Aa.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}function Ha(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+R[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+R[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+R[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+R[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+R[f]+\"Width\",!0,e)));return g}function Ia(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=wa(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=xa(a,b,f),(0>e||null==e)&&(e=a.style[b]),va.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Ha(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Ja(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=L.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&S(d)&&(f[g]=L.access(d,\"olddisplay\",ta(d.nodeName)))):(e=S(d),\"none\"===c&&e||L.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xa(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fa(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=Ba.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f=\"number\"),null!=c&&c===c&&(\"number\"!==f||n.cssNumber[h]||(c+=\"px\"),k.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fa(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xa(a,b,d)),\"normal\"===e&&b in Da&&(e=Da[b]),\"\"===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?za.test(n.css(a,\"display\"))&&0===a.offsetWidth?n.swap(a,Ca,function(){return Ia(a,b,d)}):Ia(a,b,d):void 0},set:function(a,c,d){var e=d&&wa(a);return Ga(a,c,d?Ha(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,e),e):0)}}}),n.cssHooks.marginRight=ya(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:\"inline-block\"},xa,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+R[d]+b]=f[d]||f[d-2]||f[0];return e}},ua.test(a)||(n.cssHooks[a+b].set=Ga)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wa(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Ja(this,!0)},hide:function(){return Ja(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Ka(a,b,c,d,e){return new Ka.prototype.init(a,b,c,d,e)}n.Tween=Ka,Ka.prototype={constructor:Ka,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||\"swing\",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Ka.propHooks[this.prop];return a&&a.get?a.get(this):Ka.propHooks._default.get(this)},run:function(a){var b,c=Ka.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ka.propHooks._default.set(this),this}},Ka.prototype.init.prototype=Ka.prototype,Ka.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Ka.propHooks.scrollTop=Ka.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},n.fx=Ka.prototype.init,n.fx.step={};var La,Ma,Na=/^(?:toggle|show|hide)$/,Oa=new RegExp(\"^(?:([+-])=|)(\"+Q+\")([a-z%]*)$\",\"i\"),Pa=/queueHooks$/,Qa=[Va],Ra={\"*\":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Oa.exec(b),f=e&&e[3]||(n.cssNumber[a]?\"\":\"px\"),g=(n.cssNumber[a]||\"px\"!==f&&+d)&&Oa.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||\".5\",g/=h,n.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sa(){return setTimeout(function(){La=void 0}),La=n.now()}function Ta(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=R[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ua(a,b,c){for(var d,e=(Ra[b]||[]).concat(Ra[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Va(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?L.get(a,\"olddisplay\")||ta(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Na.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?ta(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=L.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ua(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function Wa(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Xa(a,b,c){var d,e,f=0,g=Qa.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=La||Sa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:La||Sa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wa(k,j.opts.specialEasing);g>f;f++)if(d=Qa[f].call(j,a,k,j.opts))return d;return n.map(k,Ua,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xa,{tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.split(\" \");for(var c,d=0,e=a.length;e>d;d++)c=a[d],Ra[c]=Ra[c]||[],Ra[c].unshift(b)},prefilter:function(a,b){b?Qa.unshift(a):Qa.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xa(this,n.extend({},a),f);(e||L.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=L.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Pa.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=L.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Ta(b,!0),a,d,e)}}),n.each({slideDown:Ta(\"show\"),slideUp:Ta(\"hide\"),slideToggle:Ta(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(La=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),La=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ma||(Ma=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Ma),Ma=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||\"fx\",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement(\"input\"),b=l.createElement(\"select\"),c=b.appendChild(l.createElement(\"option\"));a.type=\"checkbox\",k.checkOn=\"\"!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",k.radioValue=\"t\"===a.value}();var Ya,Za,$a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Za:Ya)),\nvoid 0===c?d&&\"get\"in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&\"set\"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+\"\"),c):void n.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}}}),Za={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=$a[b]||n.find.attr;$a[b]=function(a,b,d){var e,f;return d||(f=$a[b],$a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$a[b]=f),e}});var _a=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){return a.hasAttribute(\"tabindex\")||_a.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var ab=/[\\t\\r\\n\\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ab,\" \"):\" \")){f=0;while(e=b[f++])d.indexOf(\" \"+e+\" \")<0&&(d+=e+\" \");g=n.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||\"string\"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))});if(h)for(b=(a||\"\").match(E)||[];j>i;i++)if(c=this[i],d=1===c.nodeType&&(c.className?(\" \"+c.className+\" \").replace(ab,\" \"):\"\")){f=0;while(e=b[f++])while(d.indexOf(\" \"+e+\" \")>=0)d=d.replace(\" \"+e+\" \",\" \");g=a?n.trim(d):\"\",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if(\"string\"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===U||\"boolean\"===c)&&(this.className&&L.set(this,\"__className__\",this.className),this.className=this.className||a===!1?\"\":L.get(this,\"__className__\")||\"\")})},hasClass:function(a){for(var b=\" \"+a+\" \",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(\" \"+this[c].className+\" \").replace(ab,\" \").indexOf(b)>=0)return!0;return!1}});var bb=/\\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(bb,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute(\"disabled\"))||c.parentNode.disabled&&n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)}});var cb=n.now(),db=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(a){var b,c;if(!a||\"string\"!=typeof a)return null;try{c=new DOMParser,b=c.parseFromString(a,\"text/xml\")}catch(d){b=void 0}return(!b||b.getElementsByTagName(\"parsererror\").length)&&n.error(\"Invalid XML: \"+a),b};var eb=/#.*$/,fb=/([?&])_=[^&]*/,gb=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,hb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ib=/^(?:GET|HEAD)$/,jb=/^\\/\\//,kb=/^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,lb={},mb={},nb=\"*/\".concat(\"*\"),ob=a.location.href,pb=kb.exec(ob.toLowerCase())||[];function qb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function rb(a,b,c,d){var e={},f=a===mb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function sb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function tb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function ub(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ob,type:\"GET\",isLocal:hb.test(pb[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":nb,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?sb(sb(a,n.ajaxSettings),b):sb(n.ajaxSettings,a)},ajaxPrefilter:qb(lb),ajaxTransport:qb(mb),ajax:function(a,b){\"object\"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks(\"once memory\"),q=k.statusCode||{},r={},s={},t=0,u=\"canceled\",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=gb.exec(e))f[b[1].toLowerCase()]=b[2]}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||ob)+\"\").replace(eb,\"\").replace(jb,pb[1]+\"//\"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||\"*\").toLowerCase().match(E)||[\"\"],null==k.crossDomain&&(h=kb.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===pb[1]&&h[2]===pb[2]&&(h[3]||(\"http:\"===h[1]?\"80\":\"443\"))===(pb[3]||(\"http:\"===pb[1]?\"80\":\"443\")))),k.data&&k.processData&&\"string\"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),rb(lb,k,b,v),2===t)return v;i=n.event&&k.global,i&&0===n.active++&&n.event.trigger(\"ajaxStart\"),k.type=k.type.toUpperCase(),k.hasContent=!ib.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(db.test(d)?\"&\":\"?\")+k.data,delete k.data),k.cache===!1&&(k.url=fb.test(d)?d.replace(fb,\"$1_=\"+cb++):d+(db.test(d)?\"&\":\"?\")+\"_=\"+cb++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader(\"If-Modified-Since\",n.lastModified[d]),n.etag[d]&&v.setRequestHeader(\"If-None-Match\",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader(\"Content-Type\",k.contentType),v.setRequestHeader(\"Accept\",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+(\"*\"!==k.dataTypes[0]?\", \"+nb+\"; q=0.01\":\"\"):k.accepts[\"*\"]);for(j in k.headers)v.setRequestHeader(j,k.headers[j]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u=\"abort\";for(j in{success:1,error:1,complete:1})v[j](k[j]);if(c=rb(mb,k,b,v)){v.readyState=1,i&&m.trigger(\"ajaxSend\",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort(\"timeout\")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,\"No Transport\");function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||\"\",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=tb(k,v,f)),u=ub(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[d]=w),w=v.getResponseHeader(\"etag\"),w&&(n.etag[d]=w)),204===a||\"HEAD\"===k.type?x=\"nocontent\":304===a?x=\"notmodified\":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x=\"error\",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+\"\",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?\"ajaxSuccess\":\"ajaxError\",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger(\"ajaxComplete\",[v,k]),--n.active||n.event.trigger(\"ajaxStop\")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var vb=/%20/g,wb=/\\[\\]$/,xb=/\\r?\\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+\"[\"+(\"object\"==typeof e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Ab(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join(\"&\").replace(vb,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(xb,\"\\r\\n\")}}):{name:b.name,value:c.replace(xb,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Bb=0,Cb={},Db={0:200,1223:204},Eb=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent(\"onunload\",function(){for(var a in Cb)Cb[a]()}),k.cors=!!Eb&&\"withCredentials\"in Eb,k.ajax=Eb=!!Eb,n.ajaxTransport(function(a){var b;return k.cors||Eb&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Bb;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c[\"X-Requested-With\"]||(c[\"X-Requested-With\"]=\"XMLHttpRequest\");for(e in c)f.setRequestHeader(e,c[e]);b=function(a){return function(){b&&(delete Cb[g],b=f.onload=f.onerror=null,\"abort\"===a?f.abort():\"error\"===a?d(f.status,f.statusText):d(Db[f.status]||f.status,f.statusText,\"string\"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b(\"error\"),b=Cb[g]=b(\"abort\");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b)throw h}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n(\"<script>\").prop({async:!0,charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&e(\"error\"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Fb=[],Gb=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Fb.pop()||n.expando+\"_\"+cb++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Gb.test(b.url)?\"url\":\"string\"==typeof b.data&&!(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Gb.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Gb,\"$1\"+e):b.jsonp!==!1&&(b.url+=(db.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Fb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Hb=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Hb)return Hb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e,dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Ib=a.document.documentElement;function Jb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Jb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Ib;while(a&&!n.nodeName(a,\"html\")&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Ib})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(b,c){var d=\"pageYOffset\"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Jb(b);return void 0===f?g?g[c]:b[e]:void(g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=ya(k.pixelPosition,function(a,c){return c?(c=xa(a,b),va.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Kb=a.jQuery,Lb=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Lb),b&&a.jQuery===n&&(a.jQuery=Kb),n},typeof b===U&&(a.jQuery=a.$=n),n});\n//# sourceMappingURL=jquery.min.map;\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n(function(){function n(n){function t(t,r,e,u,i,o){for(;i>=0&&o>i;i+=n){var a=u?u[i]:i;e=r(e,t[a],a,t)}return e}return function(r,e,u,i){e=b(e,i,4);var o=!k(r)&&m.keys(r),a=(o||r).length,c=n>0?0:a-1;return arguments.length<3&&(u=r[o?o[c]:c],c+=n),t(r,e,u,o,c,a)}}function t(n){return function(t,r,e){r=x(r,e);for(var u=O(t),i=n>0?0:u-1;i>=0&&u>i;i+=n)if(r(t[i],i,t))return i;return-1}}function r(n,t,r){return function(e,u,i){var o=0,a=O(e);if(\"number\"==typeof i)n>0?o=i>=0?i:Math.max(i+a,o):a=i>=0?Math.min(i+1,a):i+a+1;else if(r&&i&&a)return i=r(e,u),e[i]===u?i:-1;if(u!==u)return i=t(l.call(e,o,a),m.isNaN),i>=0?i+o:-1;for(i=n>0?o:a-1;i>=0&&a>i;i+=n)if(e[i]===u)return i;return-1}}function e(n,t){var r=I.length,e=n.constructor,u=m.isFunction(e)&&e.prototype||a,i=\"constructor\";for(m.has(n,i)&&!m.contains(t,i)&&t.push(i);r--;)i=I[r],i in n&&n[i]!==u[i]&&!m.contains(t,i)&&t.push(i)}var u=this,i=u._,o=Array.prototype,a=Object.prototype,c=Function.prototype,f=o.push,l=o.slice,s=a.toString,p=a.hasOwnProperty,h=Array.isArray,v=Object.keys,g=c.bind,y=Object.create,d=function(){},m=function(n){return n instanceof m?n:this instanceof m?void(this._wrapped=n):new m(n)};\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=m),exports._=m):u._=m,m.VERSION=\"1.8.3\";var b=function(n,t,r){if(t===void 0)return n;switch(null==r?3:r){case 1:return function(r){return n.call(t,r)};case 2:return function(r,e){return n.call(t,r,e)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,i){return n.call(t,r,e,u,i)}}return function(){return n.apply(t,arguments)}},x=function(n,t,r){return null==n?m.identity:m.isFunction(n)?b(n,t,r):m.isObject(n)?m.matcher(n):m.property(n)};m.iteratee=function(n,t){return x(n,t,1/0)};var _=function(n,t){return function(r){var e=arguments.length;if(2>e||null==r)return r;for(var u=1;e>u;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;a>c;c++){var f=o[c];t&&r[f]!==void 0||(r[f]=i[f])}return r}},j=function(n){if(!m.isObject(n))return{};if(y)return y(n);d.prototype=n;var t=new d;return d.prototype=null,t},w=function(n){return function(t){return null==t?void 0:t[n]}},A=Math.pow(2,53)-1,O=w(\"length\"),k=function(n){var t=O(n);return\"number\"==typeof t&&t>=0&&A>=t};m.each=m.forEach=function(n,t,r){t=b(t,r);var e,u;if(k(n))for(e=0,u=n.length;u>e;e++)t(n[e],e,n);else{var i=m.keys(n);for(e=0,u=i.length;u>e;e++)t(n[i[e]],i[e],n)}return n},m.map=m.collect=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=Array(u),o=0;u>o;o++){var a=e?e[o]:o;i[o]=t(n[a],a,n)}return i},m.reduce=m.foldl=m.inject=n(1),m.reduceRight=m.foldr=n(-1),m.find=m.detect=function(n,t,r){var e;return e=k(n)?m.findIndex(n,t,r):m.findKey(n,t,r),e!==void 0&&e!==-1?n[e]:void 0},m.filter=m.select=function(n,t,r){var e=[];return t=x(t,r),m.each(n,function(n,r,u){t(n,r,u)&&e.push(n)}),e},m.reject=function(n,t,r){return m.filter(n,m.negate(x(t)),r)},m.every=m.all=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;u>i;i++){var o=e?e[i]:i;if(!t(n[o],o,n))return!1}return!0},m.some=m.any=function(n,t,r){t=x(t,r);for(var e=!k(n)&&m.keys(n),u=(e||n).length,i=0;u>i;i++){var o=e?e[i]:i;if(t(n[o],o,n))return!0}return!1},m.contains=m.includes=m.include=function(n,t,r,e){return k(n)||(n=m.values(n)),(\"number\"!=typeof r||e)&&(r=0),m.indexOf(n,t,r)>=0},m.invoke=function(n,t){var r=l.call(arguments,2),e=m.isFunction(t);return m.map(n,function(n){var u=e?t:n[t];return null==u?u:u.apply(n,r)})},m.pluck=function(n,t){return m.map(n,m.property(t))},m.where=function(n,t){return m.filter(n,m.matcher(t))},m.findWhere=function(n,t){return m.find(n,m.matcher(t))},m.max=function(n,t,r){var e,u,i=-1/0,o=-1/0;if(null==t&&null!=n){n=k(n)?n:m.values(n);for(var a=0,c=n.length;c>a;a++)e=n[a],e>i&&(i=e)}else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(u>o||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},m.min=function(n,t,r){var e,u,i=1/0,o=1/0;if(null==t&&null!=n){n=k(n)?n:m.values(n);for(var a=0,c=n.length;c>a;a++)e=n[a],i>e&&(i=e)}else t=x(t,r),m.each(n,function(n,r,e){u=t(n,r,e),(o>u||1/0===u&&1/0===i)&&(i=n,o=u)});return i},m.shuffle=function(n){for(var t,r=k(n)?n:m.values(n),e=r.length,u=Array(e),i=0;e>i;i++)t=m.random(0,i),t!==i&&(u[i]=u[t]),u[t]=r[i];return u},m.sample=function(n,t,r){return null==t||r?(k(n)||(n=m.values(n)),n[m.random(n.length-1)]):m.shuffle(n).slice(0,Math.max(0,t))},m.sortBy=function(n,t,r){return t=x(t,r),m.pluck(m.map(n,function(n,r,e){return{value:n,index:r,criteria:t(n,r,e)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),\"value\")};var F=function(n){return function(t,r,e){var u={};return r=x(r,e),m.each(t,function(e,i){var o=r(e,i,t);n(u,e,o)}),u}};m.groupBy=F(function(n,t,r){m.has(n,r)?n[r].push(t):n[r]=[t]}),m.indexBy=F(function(n,t,r){n[r]=t}),m.countBy=F(function(n,t,r){m.has(n,r)?n[r]++:n[r]=1}),m.toArray=function(n){return n?m.isArray(n)?l.call(n):k(n)?m.map(n,m.identity):m.values(n):[]},m.size=function(n){return null==n?0:k(n)?n.length:m.keys(n).length},m.partition=function(n,t,r){t=x(t,r);var e=[],u=[];return m.each(n,function(n,r,i){(t(n,r,i)?e:u).push(n)}),[e,u]},m.first=m.head=m.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:m.initial(n,n.length-t)},m.initial=function(n,t,r){return l.call(n,0,Math.max(0,n.length-(null==t||r?1:t)))},m.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:m.rest(n,Math.max(0,n.length-t))},m.rest=m.tail=m.drop=function(n,t,r){return l.call(n,null==t||r?1:t)},m.compact=function(n){return m.filter(n,m.identity)};var S=function(n,t,r,e){for(var u=[],i=0,o=e||0,a=O(n);a>o;o++){var c=n[o];if(k(c)&&(m.isArray(c)||m.isArguments(c))){t||(c=S(c,t,r));var f=0,l=c.length;for(u.length+=l;l>f;)u[i++]=c[f++]}else r||(u[i++]=c)}return u};m.flatten=function(n,t){return S(n,t,!1)},m.without=function(n){return m.difference(n,l.call(arguments,1))},m.uniq=m.unique=function(n,t,r,e){m.isBoolean(t)||(e=r,r=t,t=!1),null!=r&&(r=x(r,e));for(var u=[],i=[],o=0,a=O(n);a>o;o++){var c=n[o],f=r?r(c,o,n):c;t?(o&&i===f||u.push(c),i=f):r?m.contains(i,f)||(i.push(f),u.push(c)):m.contains(u,c)||u.push(c)}return u},m.union=function(){return m.uniq(S(arguments,!0,!0))},m.intersection=function(n){for(var t=[],r=arguments.length,e=0,u=O(n);u>e;e++){var i=n[e];if(!m.contains(t,i)){for(var o=1;r>o&&m.contains(arguments[o],i);o++);o===r&&t.push(i)}}return t},m.difference=function(n){var t=S(arguments,!0,!0,1);return m.filter(n,function(n){return!m.contains(t,n)})},m.zip=function(){return m.unzip(arguments)},m.unzip=function(n){for(var t=n&&m.max(n,O).length||0,r=Array(t),e=0;t>e;e++)r[e]=m.pluck(n,e);return r},m.object=function(n,t){for(var r={},e=0,u=O(n);u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},m.findIndex=t(1),m.findLastIndex=t(-1),m.sortedIndex=function(n,t,r,e){r=x(r,e,1);for(var u=r(t),i=0,o=O(n);o>i;){var a=Math.floor((i+o)/2);r(n[a])<u?i=a+1:o=a}return i},m.indexOf=r(1,m.findIndex,m.sortedIndex),m.lastIndexOf=r(-1,m.findLastIndex),m.range=function(n,t,r){null==t&&(t=n||0,n=0),r=r||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=Array(e),i=0;e>i;i++,n+=r)u[i]=n;return u};var E=function(n,t,r,e,u){if(!(e instanceof t))return n.apply(r,u);var i=j(n.prototype),o=n.apply(i,u);return m.isObject(o)?o:i};m.bind=function(n,t){if(g&&n.bind===g)return g.apply(n,l.call(arguments,1));if(!m.isFunction(n))throw new TypeError(\"Bind must be called on a function\");var r=l.call(arguments,2),e=function(){return E(n,e,t,this,r.concat(l.call(arguments)))};return e},m.partial=function(n){var t=l.call(arguments,1),r=function(){for(var e=0,u=t.length,i=Array(u),o=0;u>o;o++)i[o]=t[o]===m?arguments[e++]:t[o];for(;e<arguments.length;)i.push(arguments[e++]);return E(n,r,this,this,i)};return r},m.bindAll=function(n){var t,r,e=arguments.length;if(1>=e)throw new Error(\"bindAll must be passed function names\");for(t=1;e>t;t++)r=arguments[t],n[r]=m.bind(n[r],n);return n},m.memoize=function(n,t){var r=function(e){var u=r.cache,i=\"\"+(t?t.apply(this,arguments):e);return m.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]};return r.cache={},r},m.delay=function(n,t){var r=l.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},m.defer=m.partial(m.delay,m,1),m.throttle=function(n,t,r){var e,u,i,o=null,a=0;r||(r={});var c=function(){a=r.leading===!1?0:m.now(),o=null,i=n.apply(e,u),o||(e=u=null)};return function(){var f=m.now();a||r.leading!==!1||(a=f);var l=t-(f-a);return e=this,u=arguments,0>=l||l>t?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||r.trailing===!1||(o=setTimeout(c,l)),i}},m.debounce=function(n,t,r){var e,u,i,o,a,c=function(){var f=m.now()-o;t>f&&f>=0?e=setTimeout(c,t-f):(e=null,r||(a=n.apply(i,u),e||(i=u=null)))};return function(){i=this,u=arguments,o=m.now();var f=r&&!e;return e||(e=setTimeout(c,t)),f&&(a=n.apply(i,u),i=u=null),a}},m.wrap=function(n,t){return m.partial(t,n)},m.negate=function(n){return function(){return!n.apply(this,arguments)}},m.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,e=n[t].apply(this,arguments);r--;)e=n[r].call(this,e);return e}},m.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},m.before=function(n,t){var r;return function(){return--n>0&&(r=t.apply(this,arguments)),1>=n&&(t=null),r}},m.once=m.partial(m.before,2);var M=!{toString:null}.propertyIsEnumerable(\"toString\"),I=[\"valueOf\",\"isPrototypeOf\",\"toString\",\"propertyIsEnumerable\",\"hasOwnProperty\",\"toLocaleString\"];m.keys=function(n){if(!m.isObject(n))return[];if(v)return v(n);var t=[];for(var r in n)m.has(n,r)&&t.push(r);return M&&e(n,t),t},m.allKeys=function(n){if(!m.isObject(n))return[];var t=[];for(var r in n)t.push(r);return M&&e(n,t),t},m.values=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},m.mapObject=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=u.length,o={},a=0;i>a;a++)e=u[a],o[e]=t(n[e],e,n);return o},m.pairs=function(n){for(var t=m.keys(n),r=t.length,e=Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},m.invert=function(n){for(var t={},r=m.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},m.functions=m.methods=function(n){var t=[];for(var r in n)m.isFunction(n[r])&&t.push(r);return t.sort()},m.extend=_(m.allKeys),m.extendOwn=m.assign=_(m.keys),m.findKey=function(n,t,r){t=x(t,r);for(var e,u=m.keys(n),i=0,o=u.length;o>i;i++)if(e=u[i],t(n[e],e,n))return e},m.pick=function(n,t,r){var e,u,i={},o=n;if(null==o)return i;m.isFunction(t)?(u=m.allKeys(o),e=b(t,r)):(u=S(arguments,!1,!1,1),e=function(n,t,r){return t in r},o=Object(o));for(var a=0,c=u.length;c>a;a++){var f=u[a],l=o[f];e(l,f,o)&&(i[f]=l)}return i},m.omit=function(n,t,r){if(m.isFunction(t))t=m.negate(t);else{var e=m.map(S(arguments,!1,!1,1),String);t=function(n,t){return!m.contains(e,t)}}return m.pick(n,t,r)},m.defaults=_(m.allKeys,!0),m.create=function(n,t){var r=j(n);return t&&m.extendOwn(r,t),r},m.clone=function(n){return m.isObject(n)?m.isArray(n)?n.slice():m.extend({},n):n},m.tap=function(n,t){return t(n),n},m.isMatch=function(n,t){var r=m.keys(t),e=r.length;if(null==n)return!e;for(var u=Object(n),i=0;e>i;i++){var o=r[i];if(t[o]!==u[o]||!(o in u))return!1}return!0};var N=function(n,t,r,e){if(n===t)return 0!==n||1/n===1/t;if(null==n||null==t)return n===t;n instanceof m&&(n=n._wrapped),t instanceof m&&(t=t._wrapped);var u=s.call(n);if(u!==s.call(t))return!1;switch(u){case\"[object RegExp]\":case\"[object String]\":return\"\"+n==\"\"+t;case\"[object Number]\":return+n!==+n?+t!==+t:0===+n?1/+n===1/t:+n===+t;case\"[object Date]\":case\"[object Boolean]\":return+n===+t}var i=\"[object Array]\"===u;if(!i){if(\"object\"!=typeof n||\"object\"!=typeof t)return!1;var o=n.constructor,a=t.constructor;if(o!==a&&!(m.isFunction(o)&&o instanceof o&&m.isFunction(a)&&a instanceof a)&&\"constructor\"in n&&\"constructor\"in t)return!1}r=r||[],e=e||[];for(var c=r.length;c--;)if(r[c]===n)return e[c]===t;if(r.push(n),e.push(t),i){if(c=n.length,c!==t.length)return!1;for(;c--;)if(!N(n[c],t[c],r,e))return!1}else{var f,l=m.keys(n);if(c=l.length,m.keys(t).length!==c)return!1;for(;c--;)if(f=l[c],!m.has(t,f)||!N(n[f],t[f],r,e))return!1}return r.pop(),e.pop(),!0};m.isEqual=function(n,t){return N(n,t)},m.isEmpty=function(n){return null==n?!0:k(n)&&(m.isArray(n)||m.isString(n)||m.isArguments(n))?0===n.length:0===m.keys(n).length},m.isElement=function(n){return!(!n||1!==n.nodeType)},m.isArray=h||function(n){return\"[object Array]\"===s.call(n)},m.isObject=function(n){var t=typeof n;return\"function\"===t||\"object\"===t&&!!n},m.each([\"Arguments\",\"Function\",\"String\",\"Number\",\"Date\",\"RegExp\",\"Error\"],function(n){m[\"is\"+n]=function(t){return s.call(t)===\"[object \"+n+\"]\"}}),m.isArguments(arguments)||(m.isArguments=function(n){return m.has(n,\"callee\")}),\"function\"!=typeof/./&&\"object\"!=typeof Int8Array&&(m.isFunction=function(n){return\"function\"==typeof n||!1}),m.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},m.isNaN=function(n){return m.isNumber(n)&&n!==+n},m.isBoolean=function(n){return n===!0||n===!1||\"[object Boolean]\"===s.call(n)},m.isNull=function(n){return null===n},m.isUndefined=function(n){return n===void 0},m.has=function(n,t){return null!=n&&p.call(n,t)},m.noConflict=function(){return u._=i,this},m.identity=function(n){return n},m.constant=function(n){return function(){return n}},m.noop=function(){},m.property=w,m.propertyOf=function(n){return null==n?function(){}:function(t){return n[t]}},m.matcher=m.matches=function(n){return n=m.extendOwn({},n),function(t){return m.isMatch(t,n)}},m.times=function(n,t,r){var e=Array(Math.max(0,n));t=b(t,r,1);for(var u=0;n>u;u++)e[u]=t(u);return e},m.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},m.now=Date.now||function(){return(new Date).getTime()};var B={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},T=m.invert(B),R=function(n){var t=function(t){return n[t]},r=\"(?:\"+m.keys(n).join(\"|\")+\")\",e=RegExp(r),u=RegExp(r,\"g\");return function(n){return n=null==n?\"\":\"\"+n,e.test(n)?n.replace(u,t):n}};m.escape=R(B),m.unescape=R(T),m.result=function(n,t,r){var e=null==n?void 0:n[t];return e===void 0&&(e=r),m.isFunction(e)?e.call(n):e};var q=0;m.uniqueId=function(n){var t=++q+\"\";return n?n+t:t},m.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g};var K=/(.)^/,z={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},D=/\\\\|'|\\r|\\n|\\u2028|\\u2029/g,L=function(n){return\"\\\\\"+z[n]};m.template=function(n,t,r){!t&&r&&(t=r),t=m.defaults({},t,m.templateSettings);var e=RegExp([(t.escape||K).source,(t.interpolate||K).source,(t.evaluate||K).source].join(\"|\")+\"|$\",\"g\"),u=0,i=\"__p+='\";n.replace(e,function(t,r,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+t.length,r?i+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\":e?i+=\"'+\\n((__t=(\"+e+\"))==null?'':__t)+\\n'\":o&&(i+=\"';\\n\"+o+\"\\n__p+='\"),t}),i+=\"';\\n\",t.variable||(i=\"with(obj||{}){\\n\"+i+\"}\\n\"),i=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+i+\"return __p;\\n\";try{var o=new Function(t.variable||\"obj\",\"_\",i)}catch(a){throw a.source=i,a}var c=function(n){return o.call(this,n,m)},f=t.variable||\"obj\";return c.source=\"function(\"+f+\"){\\n\"+i+\"}\",c},m.chain=function(n){var t=m(n);return t._chain=!0,t};var P=function(n,t){return n._chain?m(t).chain():t};m.mixin=function(n){m.each(m.functions(n),function(t){var r=m[t]=n[t];m.prototype[t]=function(){var n=[this._wrapped];return f.apply(n,arguments),P(this,r.apply(m,n))}})},m.mixin(m),m.each([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var t=o[n];m.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),\"shift\"!==n&&\"splice\"!==n||0!==r.length||delete r[0],P(this,r)}}),m.each([\"concat\",\"join\",\"slice\"],function(n){var t=o[n];m.prototype[n]=function(){return P(this,t.apply(this._wrapped,arguments))}}),m.prototype.value=function(){return this._wrapped},m.prototype.valueOf=m.prototype.toJSON=m.prototype.value,m.prototype.toString=function(){return\"\"+this._wrapped},\"function\"==typeof define&&define.amd&&define(\"underscore\",[],function(){return m})}).call(this);\n//# sourceMappingURL=underscore-min.map;\n","//     Backbone.js 1.1.2\n\n//     (c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(root, factory) {\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define('backbone',['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore');\n    factory(root, exports, _);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(this, function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create local references to array methods we'll want to use later.\n  var array = [];\n  var push = array.push;\n  var slice = array.slice;\n  var splice = array.splice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.1.2';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {\n\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n    on: function(name, callback, context) {\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    },\n\n    // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, it will be removed.\n    once: function(name, callback, context) {\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n    off: function(name, callback, context) {\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = void 0;\n        return this;\n      }\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(name) {\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    },\n\n    // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n    stopListening: function(obj, name, callback) {\n      var listeningTo = this._listeningTo;\n      if (!listeningTo) return this;\n      var remove = !name && !callback;\n      if (!callback && typeof name === 'object') callback = this;\n      if (obj) (listeningTo = {})[obj._listenId] = obj;\n      for (var id in listeningTo) {\n        obj = listeningTo[id];\n        obj.off(name, callback, this);\n        if (remove || _.isEmpty(obj._events)) delete this._listeningTo[id];\n      }\n      return this;\n    }\n\n  };\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Implement fancy features of the Events API such as multiple event\n  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n  // in terms of the existing API.\n  var eventsApi = function(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n  // listen to an event in another object ... keeping track of what it's\n  // listening to.\n  _.each(listenMethods, function(implementation, method) {\n    Events[method] = function(obj, name, callback) {\n      var listeningTo = this._listeningTo || (this._listeningTo = {});\n      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n      listeningTo[id] = obj;\n      if (!callback && typeof name === 'object') callback = this;\n      obj[implementation](name, callback, this);\n      return this;\n    };\n  });\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId('c');\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      var attr, attrs, unset, changes, silent, changing, prev, current;\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      unset           = options.unset;\n      silent          = options.silent;\n      changes         = [];\n      changing        = this._changing;\n      this._changing  = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n      current = this.attributes, prev = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          this.changed[attr] = val;\n        } else {\n          delete this.changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0, l = changes.length; i < l; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var val, changed = false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      for (var attr in diff) {\n        if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n        (changed || (changed = {}))[attr] = val;\n      }\n      return changed;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server. If the server's representation of the\n    // model differs from its current attributes, they will be overridden,\n    // triggering a `\"change\"` event.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        if (!model.set(model.parse(resp, options), options)) return false;\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      var attrs, method, xhr, attributes = this.attributes;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true}, options);\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !options.wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // Set temporary attributes if `{wait: true}`.\n      if (attrs && options.wait) {\n        this.attributes = _.extend({}, attributes, attrs);\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = model.parse(resp, options);\n        if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n          return false;\n        }\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch') options.attrs = attrs;\n      xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      if (attrs && options.wait) this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n\n      var destroy = function() {\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (options.wait || model.isNew()) destroy();\n        if (success) success(model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      if (this.isNew()) {\n        options.success();\n        return false;\n      }\n      wrapError(this, options);\n\n      var xhr = this.sync('delete', this, options);\n      if (!options.wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      return base.replace(/([^\\/])$/, '$1/') + encodeURIComponent(this.id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend(options || {}, { validate: true }));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  _.each(modelMethods, function(method) {\n    Model.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.attributes);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analagous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model){ return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      options || (options = {});\n      var i, l, index, model;\n      for (i = 0, l = models.length; i < l; i++) {\n        model = models[i] = this.get(models[i]);\n        if (!model) continue;\n        delete this._byId[model.id];\n        delete this._byId[model.cid];\n        index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        this._removeReference(model, options);\n      }\n      return singular ? models[0] : models;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : _.clone(models);\n      var i, l, id, model, attrs, existing, sort;\n      var at = options.at;\n      var targetModel = this.model;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (i = 0, l = models.length; i < l; i++) {\n        attrs = models[i] || {};\n        if (attrs instanceof Model) {\n          id = model = attrs;\n        } else {\n          id = attrs[targetModel.prototype.idAttribute || 'id'];\n        }\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(id)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge) {\n            attrs = attrs === model ? model.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n          this._addReference(model, options);\n        }\n\n        // Do not add multiple models with the same `id`.\n        model = existing || model;\n        if (order && (model.isNew() || !modelMap[model.id])) order.push(model);\n        modelMap[model.id] = true;\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (i = 0, l = this.length; i < l; ++i) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this.remove(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || (order && order.length)) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (i = 0, l = toAdd.length; i < l; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (i = 0, l = orderedModels.length; i < l; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0, l = toAdd.length; i < l; i++) {\n          (model = toAdd[i]).trigger('add', model, this, options);\n        }\n        if (sort || (order && order.length)) this.trigger('sort', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options || (options = {});\n      for (var i = 0, l = this.models.length; i < l; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] || this._byId[obj.id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      if (_.isEmpty(attrs)) return first ? void 0 : [];\n      return this[first ? 'find' : 'filter'](function(model) {\n        for (var key in attrs) {\n          if (attrs[key] !== model.get(key)) return false;\n        }\n        return true;\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success(collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      if (!(model = this._prepareModel(model, options))) return false;\n      if (!options.wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp) {\n        if (options.wait) collection.add(model, options);\n        if (success) success(model, resp, options);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (attrs instanceof Model) return attrs;\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      if (model.id != null) this._byId[model.id] = model;\n      if (!model.collection) model.collection = this;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (model && event === 'change:' + model.idAttribute) {\n        delete this._byId[model.previous(model.idAttribute)];\n        if (model.id != null) this._byId[model.id] = model;\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',\n    'lastIndexOf', 'isEmpty', 'chain', 'sample'];\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, function(method) {\n    Collection.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.models);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    options || (options = {});\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n    this.delegateEvents();\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this.$el.remove();\n      this.stopListening();\n      return this;\n    },\n\n    // Change the view's element (`this.el` property), including event\n    // re-delegation.\n    setElement: function(element, delegate) {\n      if (this.$el) this.undelegateEvents();\n      this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);\n      this.el = this.$el[0];\n      if (delegate !== false) this.delegateEvents();\n      return this;\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    // This only works for delegate-able events: not `focus`, `blur`, and\n    // not `change`, `submit`, and `reset` in Internet Explorer.\n    delegateEvents: function(events) {\n      if (!(events || (events = _.result(this, 'events')))) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[events[key]];\n        if (!method) continue;\n\n        var match = key.match(delegateEventSplitter);\n        var eventName = match[1], selector = match[2];\n        method = _.bind(method, this);\n        eventName += '.delegateEvents' + this.cid;\n        if (selector === '') {\n          this.$el.on(eventName, method);\n        } else {\n          this.$el.on(eventName, selector, method);\n        }\n      }\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view with `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);\n        this.setElement($el, false);\n      } else {\n        this.setElement(_.result(this, 'el'), false);\n      }\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // If we're sending a `PATCH` request, and we're in an old Internet Explorer\n    // that still has ActiveX enabled by default, override jQuery to use that\n    // for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.\n    if (params.type === 'PATCH' && noXhrPatch) {\n      params.xhr = function() {\n        return new ActiveXObject(\"Microsoft.XMLHTTP\");\n      };\n    }\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  var noXhrPatch =\n    typeof window !== 'undefined' && !!window.ActiveXObject &&\n      !(window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent);\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        router.execute(callback, args);\n        router.trigger.apply(router, ['route:' + name].concat(args));\n        router.trigger('route', name, args);\n        Backbone.history.trigger('route', router, name, args);\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for detecting MSIE.\n  var isExplorer = /msie [\\w.]+/;\n\n  // Cached regex for removing a trailing slash.\n  var trailingSlash = /\\/$/;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      return this.location.pathname.replace(/[^\\/]$/, '$&/') === this.root;\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the cross-browser normalized URL fragment, either from the URL,\n    // the hash, or the override.\n    getFragment: function(fragment, forcePushState) {\n      if (fragment == null) {\n        if (this._hasPushState || !this._wantsHashChange || forcePushState) {\n          fragment = decodeURI(this.location.pathname + this.location.search);\n          var root = this.root.replace(trailingSlash, '');\n          if (!fragment.indexOf(root)) fragment = fragment.slice(root.length);\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error(\"Backbone.history has already been started\");\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);\n      var fragment          = this.getFragment();\n      var docMode           = document.documentMode;\n      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      if (oldIE && this._wantsHashChange) {\n        var frame = Backbone.$('<iframe src=\"javascript:0\" tabindex=\"-1\">');\n        this.iframe = frame.hide().appendTo('body')[0].contentWindow;\n        this.navigate(fragment);\n      }\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._hasPushState) {\n        Backbone.$(window).on('popstate', this.checkUrl);\n      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {\n        Backbone.$(window).on('hashchange', this.checkUrl);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      // Determine if we need to change the base url, for a pushState link\n      // opened by a non-pushState browser.\n      this.fragment = fragment;\n      var loc = this.location;\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          this.fragment = this.getFragment(null, true);\n          this.location.replace(this.root + '#' + this.fragment);\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot() && loc.hash) {\n          this.fragment = this.getHash().replace(routeStripper, '');\n          this.history.replaceState({}, document.title, this.root + this.fragment);\n        }\n\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n      if (current === this.fragment && this.iframe) {\n        current = this.getFragment(this.getHash(this.iframe));\n      }\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      var url = this.root + (fragment = this.getFragment(fragment || ''));\n\n      // Strip the hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // Don't include a trailing slash on the root.\n      if (fragment === '' && url !== '/') url = url.slice(0, -1);\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._hasPushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if(!options.replace) this.iframe.document.open().close();\n          this._updateHash(this.iframe.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain, for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error(model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n\n","/**\r\n * Global Module\r\n * description: Get adn Set common data during app lifespan\r\n */\r\n\r\ndefine('entities/global',['require','exports','module','backbone'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var Backbone = require('backbone');\r\n    //var msgBus = require('msgbus');\r\n    var Entities = {};\r\n\r\n    Entities.Global = Backbone.Model.extend({\r\n\r\n        defaults: {\r\n\r\n            questionID: null,\r\n            title: null\r\n\t\t\t\r\n        }//,\r\n\r\n        //initialize: function () {\r\n            //this.on('change', this.updateStorage);\r\n            //this.on('change:pageTitle', this.updatePageTitle);\r\n        //}\r\n    });\r\n\r\n\r\n    module.exports = Entities.Global;\r\n});\r\n\n","/*!\n * backbone.layoutmanager.js v0.9.7\n * Copyright 2015, Tim Branyen (@tbranyen)\n * backbone.layoutmanager.js may be freely distributed under the MIT license.\n */\n(function(window, factory) {\n  \"use strict\";\n\n  // AMD. Register as an anonymous module.  Wrap in function so we have access\n  // to root via `this`.\n  if (typeof define === \"function\" && define.amd) {\n    define('backbone.layoutmanager',[\"backbone\", \"underscore\", \"jquery\"], function() {\n      return factory.apply(window, arguments);\n    });\n  }\n\n  // Node. Does not work with strict CommonJS, but only CommonJS-like\n  // environments that support module.exports, like Node.\n  else if (typeof exports === \"object\") {\n    var Backbone = require(\"backbone\");\n    var _ = require(\"underscore\");\n    // In a browserify build, since this is the entry point, Backbone.$\n    // is not bound. Ensure that it is.\n    Backbone.$ = Backbone.$ || require(\"jquery\");\n\n    module.exports = factory.call(window, Backbone, _, Backbone.$);\n  }\n\n  // Browser globals.\n  else {\n    factory.call(window, window.Backbone, window._, window.Backbone.$);\n  }\n}(typeof global === \"object\" ? global : this, function(Backbone, _, $) {\n\"use strict\";\n\n// Create a reference to the global object. In browsers, it will map to the\n// `window` object; in Node, it will be `global`.\nvar window = this;\n\n// Maintain reference to the original constructor.\nvar ViewConstructor = Backbone.View;\n\n// Cache these methods for performance.\nvar aPush = Array.prototype.push;\nvar aConcat = Array.prototype.concat;\nvar aSplice = Array.prototype.splice;\nvar trim = String.prototype.trim ?\n  _.bind(String.prototype.trim.call, String.prototype.trim) :\n  $.trim;\n\n// LayoutManager is a wrapper around a `Backbone.View`.\n// Backbone.View.extend takes options (protoProps, staticProps)\nvar LayoutManager = Backbone.View.extend({\n  _render: function() {\n    // Keep the view consistent between callbacks and deferreds.\n    var view = this;\n    // Shorthand the manager.\n    var manager = view.__manager__;\n    // Cache these properties.\n    var beforeRender = view.beforeRender;\n    // Create a deferred instead of going off\n    var def = view.deferred();\n\n    // Ensure all nested Views are properly scrubbed if re-rendering.\n    if (view.hasRendered) {\n      view._removeViews();\n    }\n\n    // This continues the render flow after `beforeRender` has completed.\n    manager.callback = function() {\n      // Clean up asynchronous manager properties.\n      delete manager.isAsync;\n      delete manager.callback;\n\n      // Always emit a beforeRender event.\n      view.trigger(\"beforeRender\", view);\n\n      // Render!\n      view._viewRender(manager).render().then(function() {\n        // Complete this deferred once resolved.\n        def.resolve();\n      });\n    };\n\n    // If a beforeRender function is defined, call it.\n    if (beforeRender) {\n      var ret = beforeRender.call(view, view);\n\n      if (ret && ret.then) {\n        manager.isAsync = true;\n        ret.then(function() {\n          manager.callback();\n\n          def.resolve();\n        }, def.resolve);\n      }\n\n      if (ret === false) {\n        return def.resolve();\n      }\n    }\n\n    if (!manager.isAsync) {\n      manager.callback();\n    }\n\n    // Return this intermediary promise.\n    return def.promise();\n  },\n\n  // This function is responsible for pairing the rendered template into the\n  // DOM element.\n  _applyTemplate: function(rendered, manager, def) {\n    // Actually put the rendered contents into the element.\n    if (_.isString(rendered)) {\n      // If no container is specified, we must replace the content.\n      if (manager.noel) {\n        rendered = $.parseHTML(rendered, true);\n\n        // Remove extra root elements.\n        this.$el.slice(1).remove();\n\n        // Swap out the View on the first top level element to avoid\n        // duplication.\n        this.$el.replaceWith(rendered);\n\n        // Don't delegate events here - we'll do that in resolve()\n        this.setElement(rendered, false);\n      } else {\n        this.html(this.$el, rendered);\n      }\n    }\n\n    // Resolve only after fetch and render have succeeded.\n    def.resolveWith(this, [this]);\n  },\n\n  // Creates a deferred and returns a function to call when finished.\n  // This gets passed to all _render methods.  The `root` value here is passed\n  // from the `manage(this).render()` line in the `_render` function\n  _viewRender: function(manager) {\n    var url, contents, def;\n    var root = this;\n\n    // Once the template is successfully fetched, use its contents to proceed.\n    // Context argument is first, since it is bound for partial application\n    // reasons.\n    function done(context, template) {\n      // Store the rendered template someplace so it can be re-assignable.\n      var rendered;\n\n      // Trigger this once the render method has completed.\n      manager.callback = function(rendered) {\n        // Clean up asynchronous manager properties.\n        delete manager.isAsync;\n        delete manager.callback;\n\n        root._applyTemplate(rendered, manager, def);\n      };\n\n      // Ensure the cache is up-to-date.\n      LayoutManager.cache(url, template);\n\n      // Render the View into the el property.\n      if (template) {\n        rendered = root.renderTemplate.call(root, template, context);\n      }\n\n      // If the function was synchronous, continue execution.\n      if (!manager.isAsync) {\n        root._applyTemplate(rendered, manager, def);\n      }\n    }\n\n    return {\n      // This `render` function is what gets called inside of the View render,\n      // when `manage(this).render` is called.  Returns a promise that can be\n      // used to know when the element has been rendered into its parent.\n      render: function() {\n        var context = root.serialize;\n        var template = root.template;\n\n        // Create a deferred specifically for fetching.\n        def = root.deferred();\n\n        // If data is a function, immediately call it.\n        if (_.isFunction(context)) {\n          context = context.call(root);\n        }\n\n        // Set the internal callback to trigger once the asynchronous or\n        // synchronous behavior has completed.\n        manager.callback = function(contents) {\n          // Clean up asynchronous manager properties.\n          delete manager.isAsync;\n          delete manager.callback;\n\n          done(context, contents);\n        };\n\n        // Set the url to the prefix + the view's template property.\n        if (typeof template === \"string\") {\n          url = root.prefix + template;\n        }\n\n        // Check if contents are already cached and if they are, simply process\n        // the template with the correct data.\n        if (contents = LayoutManager.cache(url)) {\n          done(context, contents, url);\n\n          return def;\n        }\n\n        // Fetch layout and template contents.\n        if (typeof template === \"string\") {\n          contents = root.fetchTemplate.call(root, root.prefix +\n            template);\n        // If the template is already a function, simply call it.\n        } else if (typeof template === \"function\") {\n          contents = template;\n        // If its not a string and not undefined, pass the value to `fetch`.\n        } else if (template != null) {\n          contents = root.fetchTemplate.call(root, template);\n        }\n\n        // If the function was synchronous, continue execution.\n        if (!manager.isAsync) {\n          done(context, contents);\n        }\n\n        return def;\n      }\n    };\n  },\n\n  // This named function allows for significantly easier debugging.\n  constructor: function Layout(options) {\n    // Grant this View superpowers.\n    this.manage = true;\n\n    // Give this View access to all passed options as instance properties.\n    _.extend(this, options);\n\n    // Have Backbone set up the rest of this View.\n    Backbone.View.apply(this, arguments);\n  },\n\n  // This method is used within specific methods to indicate that they should\n  // be treated as asynchronous.  This method should only be used within the\n  // render chain, otherwise unexpected behavior may occur.\n  async: function() {\n    var manager = this.__manager__;\n\n    // Set this View's action to be asynchronous.\n    manager.isAsync = true;\n\n    // Return the callback.\n    return manager.callback;\n  },\n\n  promise: function() {\n    return this.__manager__.renderDeferred.promise();\n  },\n\n  // Proxy `then` for easier invocation.\n  then: function() {\n    return this.promise().then.apply(this, arguments);\n  },\n\n  // Sometimes it's desirable to only render the child views under the parent.\n  // This is typical for a layout that does not change.  This method will\n  // iterate over the provided views or delegate to `getViews` to fetch child\n  // Views and aggregate all render promises and return the parent View.\n  // The internal `promise()` method will return the aggregate promise that\n  // resolves once all children have completed their render.\n  renderViews: function(views) {\n    var root = this;\n    var manager = root.__manager__;\n    var newDeferred = root.deferred();\n\n    // If the caller provided an array of views then render those, otherwise\n    // delegate to getViews.\n    if (views && _.isArray(views)) {\n      views = _.chain(views);\n    } else {\n      views = root.getViews(views);\n    }\n\n    // Collect all promises from rendering the child views and wait till they\n    // all complete.\n    var promises = views.map(function(view) {\n      return view.render().__manager__.renderDeferred;\n    }).value();\n\n    // Simulate a parent render to remain consistent.\n    manager.renderDeferred = newDeferred.promise();\n\n    // Once all child views have completed rendering, resolve parent deferred\n    // with the correct context.\n    root.when(promises).then(function() {\n      newDeferred.resolveWith(root, [root]);\n    });\n\n    // Allow this method to be chained.\n    return root;\n  },\n\n  // Shorthand to `setView` function with the `insert` flag set.\n  insertView: function(selector, view) {\n    // If the `view` argument exists, then a selector was passed in.  This code\n    // path will forward the selector on to `setView`.\n    if (view) {\n      return this.setView(selector, view, true);\n    }\n\n    // If no `view` argument is defined, then assume the first argument is the\n    // View, somewhat now confusingly named `selector`.\n    return this.setView(selector, true);\n  },\n\n  // Iterate over an object and ensure every value is wrapped in an array to\n  // ensure they will be inserted, then pass that object to `setViews`.\n  insertViews: function(views) {\n    // If an array of views was passed it should be inserted into the\n    // root view. Much like calling insertView without a selector.\n    if (_.isArray(views)) {\n      return this.setViews({ \"\": views });\n    }\n\n    _.each(views, function(view, selector) {\n      views[selector] = _.isArray(view) ? view : [view];\n    });\n\n    return this.setViews(views);\n  },\n\n  // Returns the View that matches the `getViews` filter function.\n  getView: function(fn) {\n    // If `getView` is invoked with undefined as the first argument, then the\n    // second argument will be used instead.  This is to allow\n    // `getViews(undefined, fn)` to work as `getViews(fn)`.  Useful for when\n    // you are allowing an optional selector.\n    if (fn == null) {\n      fn = arguments[1];\n    }\n\n    return this.getViews(fn).first().value();\n  },\n\n  // Provide a filter function to get a flattened array of all the subviews.\n  // If the filter function is omitted it will return all subviews.  If a\n  // String is passed instead, it will return the Views for that selector.\n  getViews: function(fn) {\n    var views;\n\n    // If the filter argument is a String, then return a chained Version of the\n    // elements. The value at the specified filter may be undefined, a single\n    // view, or an array of views; in all cases, chain on a flat array.\n    if (typeof fn === \"string\") {\n      fn = this.sections[fn] || fn;\n      views = this.views[fn] || [];\n\n      // If Views is undefined you are concatenating an `undefined` to an array\n      // resulting in a value being returned.  Defaulting to an array prevents\n      // this.\n      //return _.chain([].concat(views || []));\n      return _.chain([].concat(views));\n    }\n\n    // Generate an array of all top level (no deeply nested) Views flattened.\n    views = _.chain(this.views).map(function(view) {\n      return _.isArray(view) ? view : [view];\n    }, this).flatten();\n\n    // If the argument passed is an Object, then pass it to `_.where`.\n    if (typeof fn === \"object\") {\n      return views.where(fn);\n    }\n\n    // If a filter function is provided, run it on all Views and return a\n    // wrapped chain. Otherwise, simply return a wrapped chain of all Views.\n    return typeof fn === \"function\" ? views.filter(fn) : views;\n  },\n\n  // Use this to remove Views, internally uses `getViews` so you can pass the\n  // same argument here as you would to that method.\n  removeView: function(fn) {\n    var views;\n\n    // Allow an optional selector or function to find the right model and\n    // remove nested Views based off the results of the selector or filter.\n    views = this.getViews(fn).each(function(nestedView) {\n      nestedView.remove();\n    });\n\n    // call value incase the chain is evaluated lazily to ensure the views get\n    // removed\n    views.value();\n\n    return views;\n  },\n\n  // This takes in a partial name and view instance and assigns them to\n  // the internal collection of views.  If a view is not a LayoutManager\n  // instance, then mix in the LayoutManager prototype.  This ensures\n  // all Views can be used successfully.\n  //\n  // Must definitely wrap any render method passed in or defaults to a\n  // typical render function `return layout(this).render()`.\n  setView: function(name, view, insert) {\n    var manager, selector;\n    // Parent view, the one you are setting a View on.\n    var root = this;\n\n    // If no name was passed, use an empty string and shift all arguments.\n    if (typeof name !== \"string\") {\n      insert = view;\n      view = name;\n      name = \"\";\n    }\n\n    // Shorthand the `__manager__` property.\n    manager = view.__manager__;\n\n    // If the View has not been properly set up, throw an Error message\n    // indicating that the View needs `manage: true` set.\n    if (!manager) {\n      throw new Error(\"The argument associated with selector '\" + name +\n        \"' is defined and a View.  Set `manage` property to true for \" +\n        \"Backbone.View instances.\");\n    }\n\n    // Add reference to the parentView.\n    manager.parent = root;\n\n    // Add reference to the placement selector used.\n    selector = manager.selector = root.sections[name] || name;\n\n    // Code path is less complex for Views that are not being inserted.  Simply\n    // remove existing Views and bail out with the assignment.\n    if (!insert) {\n      // Ensure remove is called only when swapping in a new view (when the\n      // view is the same, it does not need to be removed or cleaned up).\n      if (root.getView(name) !== view) {\n        root.removeView(name);\n      }\n\n      // Assign to main views object and return for chainability.\n      return root.views[selector] = view;\n    }\n\n    // Ensure this.views[selector] is an array and push this View to\n    // the end.\n    root.views[selector] = aConcat.call([], root.views[name] || [], view);\n\n    // Put the parent view into `insert` mode.\n    root.__manager__.insert = true;\n\n    return view;\n  },\n\n  // Allows the setting of multiple views instead of a single view.\n  setViews: function(views) {\n    // Iterate over all the views and use the View's view method to assign.\n    _.each(views, function(view, name) {\n      // If the view is an array put all views into insert mode.\n      if (_.isArray(view)) {\n        return _.each(view, function(view) {\n          this.insertView(name, view);\n        }, this);\n      }\n\n      // Assign each view using the view function.\n      this.setView(name, view);\n    }, this);\n\n    // Allow for chaining\n    return this;\n  },\n\n  // By default this should find all nested views and render them into\n  // the this.el and call done once all of them have successfully been\n  // resolved.\n  //\n  // This function returns a promise that can be chained to determine\n  // once all subviews and main view have been rendered into the view.el.\n  render: function() {\n    var root = this;\n    var manager = root.__manager__;\n    var parent = manager.parent;\n    var rentManager = parent && parent.__manager__;\n    var def = root.deferred();\n\n    // Triggered once the render has succeeded.\n    function resolve() {\n\n      // Insert all subViews into the parent at once.\n      _.each(root.views, function(views, selector) {\n        // Fragments aren't used on arrays of subviews.\n        if (_.isArray(views)) {\n          root.htmlBatch(root, views, selector);\n        }\n      });\n\n      // If there is a parent and we weren't attached to it via the previous\n      // method (single view), attach.\n      if (parent && !manager.insertedViaFragment) {\n        if (!root.contains(parent.el, root.el)) {\n          // Apply the partial using parent's html() method.\n          parent.partial(parent.$el, root.$el, rentManager, manager);\n        }\n      }\n\n      // Ensure events are always correctly bound after rendering.\n      root.delegateEvents();\n\n      // Set this View as successfully rendered.\n      root.hasRendered = true;\n      manager.renderInProgress = false;\n\n      // Clear triggeredByRAF flag.\n      delete manager.triggeredByRAF;\n\n      // Only process the queue if it exists.\n      if (manager.queue && manager.queue.length) {\n        // Ensure that the next render is only called after all other\n        // `done` handlers have completed.  This will prevent `render`\n        // callbacks from firing out of order.\n        (manager.queue.shift())();\n      } else {\n        // Once the queue is depleted, remove it, the render process has\n        // completed.\n        delete manager.queue;\n      }\n\n      // Reusable function for triggering the afterRender callback and event.\n      function completeRender() {\n        var console = window.console;\n        var afterRender = root.afterRender;\n\n        if (afterRender) {\n          afterRender.call(root, root);\n        }\n\n        // Always emit an afterRender event.\n        root.trigger(\"afterRender\", root);\n\n        // If there are multiple top level elements and `el: false` is used,\n        // display a warning message and a stack trace.\n        if (manager.noel && root.$el.length > 1) {\n          // Do not display a warning while testing or if warning suppression\n          // is enabled.\n          if (_.isFunction(console.warn) && !root.suppressWarnings) {\n            console.warn(\"`el: false` with multiple top level elements is \" +\n              \"not supported.\");\n\n            // Provide a stack trace if available to aid with debugging.\n            if (_.isFunction(console.trace)) {\n              console.trace();\n            }\n          }\n        }\n      }\n\n      // If the parent is currently rendering, wait until it has completed\n      // until calling the nested View's `afterRender`.\n      if (rentManager && (rentManager.renderInProgress || rentManager.queue)) {\n        // Wait until the parent View has finished rendering, which could be\n        // asynchronous, and trigger afterRender on this View once it has\n        // completed.\n        parent.once(\"afterRender\", completeRender);\n      } else {\n        // This View and its parent have both rendered.\n        completeRender();\n      }\n\n      return def.resolveWith(root, [root]);\n    }\n\n    // Actually facilitate a render.\n    function actuallyRender() {\n\n      // The `_viewRender` method is broken out to abstract away from having\n      // too much code in `actuallyRender`.\n      root._render().done(function() {\n        // If there are no children to worry about, complete the render\n        // instantly.\n        if (!_.keys(root.views).length) {\n          return resolve();\n        }\n\n        // Create a list of promises to wait on until rendering is done.\n        // Since this method will run on all children as well, its sufficient\n        // for a full hierarchical.\n        var promises = _.map(root.views, function(view) {\n          var insert = _.isArray(view);\n\n          // If items are being inserted, they will be in a non-zero length\n          // Array.\n          if (insert && view.length) {\n            // Mark each subview's manager so they don't attempt to attach by\n            // themselves.  Return a single promise representing the entire\n            // render.\n            return root.when(_.map(view, function(subView) {\n              subView.__manager__.insertedViaFragment = true;\n              return subView.render().__manager__.renderDeferred;\n            }));\n          }\n\n          // Only return the fetch deferred, resolve the main deferred after\n          // the element has been attached to it's parent.\n          return !insert ? view.render().__manager__.renderDeferred : view;\n        });\n\n        // Once all nested Views have been rendered, resolve this View's\n        // deferred.\n        root.when(promises).done(resolve);\n      });\n    }\n\n    // Mark this render as in progress. This will prevent\n    // afterRender from being fired until the entire chain has rendered.\n    manager.renderInProgress = true;\n\n    // Start the render.\n    // Register this request & cancel any that conflict.\n    root._registerWithRAF(actuallyRender, def);\n\n    // Put the deferred inside of the `__manager__` object, since we don't want\n    // end users accessing this directly anymore in favor of the `afterRender`\n    // event.  So instead of doing `render().then(...` do\n    // `render().once(\"afterRender\", ...`.\n    // FIXME: I think we need to move back to promises so that we don't\n    // miss events, regardless of sync/async (useRAF setting)\n    manager.renderDeferred = def;\n\n    // Return the actual View for chainability purposes.\n    return root;\n  },\n\n  // Ensure the cleanup function is called whenever remove is called.\n  remove: function() {\n    // Force remove itself from its parent.\n    LayoutManager._removeView(this, true);\n\n    // Call the original remove function.\n    return this._remove.apply(this, arguments);\n  },\n\n  // Register a view render with RAF.\n  _registerWithRAF: function(callback, deferred) {\n    var root = this;\n    var manager = root.__manager__;\n    var rentManager = manager.parent && manager.parent.__manager__;\n\n    // Allow RAF processing to be shut off using `useRAF`:false.\n    if (this.useRAF === false) {\n      if (manager.queue) {\n        aPush.call(manager.queue, callback);\n      } else {\n        manager.queue = [];\n        callback();\n      }\n      return;\n    }\n\n    // Keep track of all deferreds so we can resolve them.\n    manager.deferreds = manager.deferreds || [];\n    manager.deferreds.push(deferred);\n\n    // Schedule resolving all deferreds that are waiting.\n    deferred.done(resolveDeferreds);\n\n    // Cancel any other renders on this view that are queued to execute.\n    this._cancelQueuedRAFRender();\n\n    // Trigger immediately if the parent was triggered by RAF.\n    // The flag propagates downward so this view's children are also\n    // rendered immediately.\n    if (rentManager && rentManager.triggeredByRAF) {\n      return finish();\n    }\n\n    // Register this request with requestAnimationFrame.\n    manager.rafID = root.requestAnimationFrame(finish);\n\n    function finish() {\n      // Remove this ID as it is no longer valid.\n      manager.rafID = null;\n\n      // Set flag (will propagate to children) so they render\n      // without waiting for RAF.\n      manager.triggeredByRAF = true;\n\n      // Call original cb.\n      callback();\n    }\n\n    // Resolve all deferreds that were cancelled previously, if any.\n    // This allows the user to bind callbacks to any render callback,\n    // even if it was cancelled above.\n    function resolveDeferreds() {\n      for (var i = 0; i < manager.deferreds.length; i++){\n        manager.deferreds[i].resolveWith(root, [root]);\n      }\n      manager.deferreds = [];\n    }\n  },\n\n  // Cancel any queued render requests.\n  _cancelQueuedRAFRender: function() {\n    var root = this;\n    var manager = root.__manager__;\n    if (manager.rafID != null) {\n      root.cancelAnimationFrame(manager.rafID);\n    }\n  }\n},\n\n// Static Properties\n{\n  // Clearable cache.\n  _cache: {},\n\n  // Remove all nested Views.\n  _removeViews: function(root, force) {\n    // Shift arguments around.\n    if (typeof root === \"boolean\") {\n      force = root;\n      root = this;\n    }\n\n    // Allow removeView to be called on instances.\n    root = root || this;\n\n    // Iterate over all of the nested View's and remove.\n    root.getViews().each(function(view) {\n      // Force doesn't care about if a View has rendered or not.\n      if (view.hasRendered || force) {\n        LayoutManager._removeView(view, force);\n      }\n\n    // call value() in case this chain is evaluated lazily\n    }).value();\n  },\n\n  // Remove a single nested View.\n  _removeView: function(view, force) {\n    var parentViews;\n    // Shorthand the managers for easier access.\n    var manager = view.__manager__;\n    var rentManager = manager.parent && manager.parent.__manager__;\n    // Test for keep.\n    var keep = typeof view.keep === \"boolean\" ? view.keep : view.options.keep;\n\n    // In insert mode, remove views that do not have `keep` attribute set,\n    // unless the force flag is set.\n    if ((!keep && rentManager && rentManager.insert === true) || force) {\n      // Clean out the events.\n      LayoutManager.cleanViews(view);\n\n      // Since we are removing this view, force subviews to remove\n      view._removeViews(true);\n\n      // Remove the View completely.\n      view.$el.remove();\n\n      // Cancel any pending renders, if present.\n      view._cancelQueuedRAFRender();\n\n      // Bail out early if no parent exists.\n      if (!manager.parent) { return; }\n\n      // Assign (if they exist) the sibling Views to a property.\n      parentViews = manager.parent.views[manager.selector];\n\n      // If this is an array of items remove items that are not marked to\n      // keep.\n      if (_.isArray(parentViews)) {\n        // Remove duplicate Views.\n        _.each(_.clone(parentViews), function(view, i) {\n          // If the managers match, splice off this View.\n          if (view && view.__manager__ === manager) {\n            aSplice.call(parentViews, i, 1);\n          }\n        });\n        if (_.isEmpty(parentViews)) {\n          manager.parent.trigger(\"empty\", manager.selector);\n        }\n        return;\n      }\n\n      // Otherwise delete the parent selector.\n      delete manager.parent.views[manager.selector];\n      manager.parent.trigger(\"empty\", manager.selector);\n    }\n  },\n\n  // Cache templates into LayoutManager._cache.\n  cache: function(path, contents) {\n    // If template path is found in the cache, return the contents.\n    if (path in this._cache && contents == null) {\n      return this._cache[path];\n    // Ensure path and contents aren't undefined.\n    } else if (path != null && contents != null) {\n      return this._cache[path] = contents;\n    }\n\n    // If the template is not in the cache, return undefined.\n  },\n\n  // Accept either a single view or an array of views to clean of all DOM\n  // events internal model and collection references and all Backbone.Events.\n  cleanViews: function(views) {\n    // Clear out all existing views.\n    _.each(aConcat.call([], views), function(view) {\n      // fire cleanup event to the attached handlers\n      view.trigger(\"cleanup\", view);\n\n      // Remove all custom events attached to this View.\n      view.unbind();\n\n      // Automatically unbind `model`.\n      if (view.model instanceof Backbone.Model) {\n        view.model.off(null, null, view);\n      }\n\n      // Automatically unbind `collection`.\n      if (view.collection instanceof Backbone.Collection) {\n        view.collection.off(null, null, view);\n      }\n\n      // Automatically unbind events bound to this View.\n      view.stopListening();\n\n      // If a custom cleanup method was provided on the view, call it after\n      // the initial cleanup is done\n      if (_.isFunction(view.cleanup)) {\n        view.cleanup();\n      }\n    });\n  },\n\n  // This static method allows for global configuration of LayoutManager.\n  configure: function(options) {\n    _.extend(LayoutManager.prototype, options);\n\n    // Allow LayoutManager to manage Backbone.View.prototype.\n    if (options.manage) {\n      Backbone.View.prototype.manage = true;\n    }\n\n    // Disable the element globally.\n    if (options.el === false) {\n      Backbone.View.prototype.el = false;\n    }\n\n    // Allow global configuration of `suppressWarnings`.\n    if (options.suppressWarnings === true) {\n      Backbone.View.prototype.suppressWarnings = true;\n    }\n\n    // Allow global configuration of `useRAF`.\n    if (options.useRAF === false) {\n      Backbone.View.prototype.useRAF = false;\n    }\n\n    // Allow underscore to be swapped out\n    if (options._) {\n      _ = options._;\n    }\n  },\n\n  // Configure a View to work with the LayoutManager plugin.\n  setupView: function(views, options) {\n    // Ensure that options is always an object, and clone it so that\n    // changes to the original object don't screw up this view.\n    options = _.extend({}, options);\n\n    // Set up all Views passed.\n    _.each(aConcat.call([], views), function(view) {\n      // If the View has already been setup, no need to do it again.\n      if (view.__manager__) {\n        return;\n      }\n\n      var views, declaredViews;\n      var proto = LayoutManager.prototype;\n\n      // Ensure necessary properties are set.\n      _.defaults(view, {\n        // Ensure a view always has a views object.\n        views: {},\n\n        // Ensure a view always has a sections object.\n        sections: {},\n\n        // Internal state object used to store whether or not a View has been\n        // taken over by layout manager and if it has been rendered into the\n        // DOM.\n        __manager__: {},\n\n        // Add the ability to remove all Views.\n        _removeViews: LayoutManager._removeViews,\n\n        // Add the ability to remove itself.\n        _removeView: LayoutManager._removeView\n\n      // Mix in all LayoutManager prototype properties as well.\n      }, LayoutManager.prototype);\n\n      // Assign passed options.\n      view.options = options;\n\n      // Merge the View options into the View.\n      _.extend(view, options);\n\n      // By default the original Remove function is the Backbone.View one.\n      view._remove = Backbone.View.prototype.remove;\n\n      // Ensure the render is always set correctly.\n      view.render = LayoutManager.prototype.render;\n\n      // If the user provided their own remove override, use that instead of\n      // the default.\n      if (view.remove !== proto.remove) {\n        view._remove = view.remove;\n        view.remove = proto.remove;\n      }\n\n      // Normalize views to exist on either instance or options, default to\n      // options.\n      views = options.views || view.views;\n\n      // Set the internal views, only if selectors have been provided.\n      if (_.keys(views).length) {\n        // Keep original object declared containing Views.\n        declaredViews = views;\n\n        // Reset the property to avoid duplication or overwritting.\n        view.views = {};\n\n        // If any declared view is wrapped in a function, invoke it.\n        _.each(declaredViews, function(declaredView, key) {\n          if (typeof declaredView === \"function\") {\n            declaredViews[key] = declaredView.call(view, view);\n          }\n        });\n\n        // Set the declared Views.\n        view.setViews(declaredViews);\n      }\n    });\n  }\n});\n\nLayoutManager.VERSION = \"0.9.7\";\n\n// Expose through Backbone object.\nBackbone.Layout = LayoutManager;\n\n// Override _configure to provide extra functionality that is necessary in\n// order for the render function reference to be bound during initialize.\nBackbone.View.prototype.constructor = function(options) {\n  var noel;\n\n  // Ensure options is always an object.\n  options = options || {};\n\n  // Remove the container element provided by Backbone.\n  if (\"el\" in options ? options.el === false : this.el === false) {\n    noel = true;\n  }\n\n  // If manage is set, do it!\n  if (options.manage || this.manage) {\n    // Set up this View.\n    LayoutManager.setupView(this, options);\n  }\n\n  // Assign the `noel` property once we're sure the View we're working with is\n  // managed by LayoutManager.\n  if (this.__manager__) {\n    this.__manager__.noel = noel;\n    this.__manager__.suppressWarnings = options.suppressWarnings;\n  }\n\n  // Act like nothing happened.\n  ViewConstructor.apply(this, arguments);\n};\n\nBackbone.View = Backbone.View.prototype.constructor;\n\n// Copy over the extend method.\nBackbone.View.extend = ViewConstructor.extend;\n\n// Copy over the prototype as well.\nBackbone.View.prototype = ViewConstructor.prototype;\n\n// Default configuration options; designed to be overriden.\nvar defaultOptions = {\n  // Prefix template/layout paths.\n  prefix: \"\",\n\n  // Use requestAnimationFrame to queue up view rendering and cancel\n  // repeat requests. Leave on for better performance.\n  useRAF: true,\n\n  // Can be used to supply a different deferred implementation.\n  deferred: function() {\n    return $.Deferred();\n  },\n\n  // Fetch is passed a path and is expected to return template contents as a\n  // function or string.\n  fetchTemplate: function(path) {\n    return _.template($(path).html());\n  },\n\n  // By default, render using underscore's templating and trim output.\n  renderTemplate: function(template, context) {\n    return trim(template.call(this, context));\n  },\n\n  // By default, pass model attributes to the templates\n  serialize: function() {\n    return this.model ? _.clone(this.model.attributes) : {};\n  },\n\n  // This is the most common way you will want to partially apply a view into\n  // a layout.\n  partial: function($root, $el, rentManager, manager) {\n    var $filtered;\n\n    // If selector is specified, attempt to find it.\n    if (manager.selector) {\n      if (rentManager.noel) {\n        $filtered = $root.filter(manager.selector);\n        $root = $filtered.length ? $filtered : $root.find(manager.selector);\n      } else {\n        $root = $root.find(manager.selector);\n      }\n    }\n\n    // Use the insert method if the parent's `insert` argument is true.\n    if (rentManager.insert) {\n      this.insert($root, $el);\n    } else {\n      this.html($root, $el);\n    }\n  },\n\n  // Override this with a custom HTML method, passed a root element and content\n  // (a jQuery collection or a string) to replace the innerHTML with.\n  html: function($root, content) {\n    $root.empty().append(content);\n  },\n\n  // Used for inserting subViews in a single batch.  This gives a small\n  // performance boost as we write to a disconnected fragment instead of to the\n  // DOM directly. Smarter browsers like Chrome will batch writes internally\n  // and layout as seldom as possible, but even in that case this provides a\n  // decent boost.  jQuery will use a DocumentFragment for the batch update,\n  // but Cheerio in Node will not.\n  htmlBatch: function(rootView, subViews, selector) {\n    // Shorthand the parent manager object.\n    var rentManager = rootView.__manager__;\n    // Create a simplified manager object that tells partial() where\n    // place the elements.\n    var manager = { selector: selector };\n\n    // Get the elements to be inserted into the root view.\n    var els = _.reduce(subViews, function(memo, sub) {\n      // Check if keep is present - do boolean check in case the user\n      // has created a `keep` function.\n      var keep = typeof sub.keep === \"boolean\" ? sub.keep : sub.options.keep;\n      // If a subView is present, don't push it.  This can only happen if\n      // `keep: true`.  We do the keep check for speed as $.contains is not\n      // cheap.\n      var exists = keep && $.contains(rootView.el, sub.el);\n\n      // If there is an element and it doesn't already exist in our structure\n      // attach it.\n      if (sub.el && !exists) {\n        memo.push(sub.el);\n      }\n\n      return memo;\n    }, []);\n\n    // Use partial to apply the elements. Wrap els in jQ obj for cheerio.\n    return this.partial(rootView.$el, $(els), rentManager, manager);\n  },\n\n  // Very similar to HTML except this one will appendChild by default.\n  insert: function($root, $el) {\n    $root.append($el);\n  },\n\n  // Return a deferred for when all promises resolve/reject.\n  when: function(promises) {\n    return $.when.apply(null, promises);\n  },\n\n  // A method to determine if a View contains another.\n  contains: function(parent, child) {\n    return $.contains(parent, child);\n  },\n\n  // Based on:\n  // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n  // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and\n  // Tino Zijdel.\n  requestAnimationFrame: (function() {\n    var lastTime = 0;\n    var vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    var requestAnimationFrame = window.requestAnimationFrame;\n\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      requestAnimationFrame = window[vendors[i] + \"RequestAnimationFrame\"];\n    }\n\n    if (!requestAnimationFrame){\n      requestAnimationFrame = function(callback) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        var id = window.setTimeout(function() {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n\n    return _.bind(requestAnimationFrame, window);\n  })(),\n\n  cancelAnimationFrame: (function() {\n    var vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n    var cancelAnimationFrame = window.cancelAnimationFrame;\n\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      cancelAnimationFrame =\n        window[vendors[i] + \"CancelAnimationFrame\"] ||\n        window[vendors[i] + \"CancelRequestAnimationFrame\"];\n    }\n\n    if (!cancelAnimationFrame) {\n      cancelAnimationFrame = function(id) {\n        clearTimeout(id);\n      };\n    }\n\n    return _.bind(cancelAnimationFrame, window);\n  })()\n};\n\n// Extend LayoutManager with default options.\n_.extend(LayoutManager.prototype, defaultOptions);\n\n// Assign `LayoutManager` object for AMD loaders.\nreturn LayoutManager;\n\n}));\n\n","this[\"JST\"] = this[\"JST\"] || {};\n\nthis[\"JST\"][\"./app/templates/error.html\"] = function(obj) {\nobj || (obj = {});\nvar __t, __p = '', __e = _.escape;\nwith (obj) {\n__p += '<section>\\r\\n    <h3>' +\n__e( status + ':' ) +\n' ' +\n__e( title ) +\n'</h3>\\r\\n    <p>' +\n__e( message ) +\n'</p>\\r\\n</section>\\r\\n';\n\n}\nreturn __p\n};\n\nthis[\"JST\"][\"./app/templates/layouts/main.html\"] = function(obj) {\nobj || (obj = {});\nvar __t, __p = '', __e = _.escape;\nwith (obj) {\n__p += '<section class=\"blizzard-app\">\\r\\n    <!-- header class=\"header page-header gradient-dark full-width\"></header> -->\\r\\n    <<!-- div class=\"container navigation\"></div> -->\\r\\n    <div class=\"container main-container\"></div>\\r\\n</section>\\r\\n';\n\n}\nreturn __p\n};\n\nthis[\"JST\"][\"./app/templates/question-details.html\"] = function(obj) {\nobj || (obj = {});\nvar __t, __p = '', __e = _.escape;\nwith (obj) {\n__p += '<div class=\"question-details\">\\n<strong>Question Details</strong>\\n</div>';\n\n}\nreturn __p\n};\n\nthis[\"JST\"][\"./app/templates/question-item.html\"] = function(obj) {\nobj || (obj = {});\nvar __t, __p = '', __e = _.escape;\nwith (obj) {\n__p += '<div>\\r\\n    <strong>question</strong>  \\r\\n</div>\\r\\n\\r\\n\\r\\n';\n\n}\nreturn __p\n};\n\nthis[\"JST\"][\"./app/templates/question.html\"] = function(obj) {\nobj || (obj = {});\nvar __t, __p = '', __e = _.escape;\nwith (obj) {\n__p += '<section class=\"question-details\"></section>\\r\\n\\r\\n\\r\\n';\n\n}\nreturn __p\n};\n\nthis[\"JST\"][\"./app/templates/questions.html\"] = function(obj) {\nobj || (obj = {});\nvar __t, __p = '', __e = _.escape;\nwith (obj) {\n__p += '<ul class=\"questions-list\"></ul>';\n\n}\nreturn __p\n};\ndefine(\"../dist/js/templates.min\", function(){});\n\n","define('app',['require','exports','module','jquery','backbone','./entities/global','backbone.layoutmanager','../dist/js/templates.min'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var $ = require('jquery');\r\n    var Backbone = require('backbone');\r\n    var Global = require('./entities/global');\r\n    var Layout = require('backbone.layoutmanager');\r\n    //var Nav = require('utilities/nav');\r\n    //require('bootstrap');\r\n\r\n    // Provide a global location to place configuration settings and module\r\n    // creation.\r\n    var app = {\r\n        // The root path to run the application.\r\n    \troot: './app',\r\n        globalModel: new Global()/*,\r\n    \tnav: Nav.init(),*/\r\n        \r\n    };\r\n\r\n    // Configure LayoutManager with Backbone Boilerplate defaults.\r\n    Layout.configure({\r\n        // Allow | Not Allow LayoutManager to augment Backbone.View.prototype.\r\n        manage: false,\r\n\r\n        // Set the prefix to where your templates live on the server, but keep in\r\n        // mind that this prefix needs to match what your production paths will be.\r\n        // Typically those are relative.  So we'll add the leading `/` in `fetch`.\r\n        prefix: './app/templates/',\r\n\r\n        // This method will check for prebuilt templates first and fall back to\r\n        // loading in via AJAX.\r\n        fetchTemplate: function(path) {\r\n            // Check for a global JST object.  When you build your templates for\r\n            // production, ensure they are all attached here.\r\n            require('../dist/js/templates.min');\r\n            var JST = window.JST || {};\r\n            // Concatenate the file extension.\r\n            path = path + '.html';\r\n\r\n            // If the path exists in the object, use it instead of fetching remotely.\r\n            if (JST[path]) {\r\n                return JST[path];\r\n            }\r\n\r\n            // If it does not exist in the JST object, mark this function as\r\n            // asynchronous.\r\n            var done = this.async();\r\n\r\n            // Fetch via jQuery's GET.  The third argument specifies the dataType.\r\n            $.get(app.root + path, function(contents) {\r\n                // Assuming you're using underscore templates, the compile step here is\r\n                // `_.template`.\r\n                done(_.template(contents));\r\n            }, 'text');\r\n        }\r\n    });\r\n\r\n    app.layout = new Backbone.Layout({\r\n        el: '#main',\r\n        template: 'layouts/main'\r\n    });\r\n\r\n    module.exports = app;\r\n});\r\n\n","// Backbone.Wreqr (Backbone.Marionette)\r\n// ----------------------------------\r\n// v1.3.1\r\n//\r\n// Copyright (c)2014 Derick Bailey, Muted Solutions, LLC.\r\n// Distributed under MIT license\r\n//\r\n// http://github.com/marionettejs/backbone.wreqr\r\n\r\n\r\n(function(root, factory) {\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n    define('backbone.wreqr',['backbone', 'underscore'], function(Backbone, _) {\r\n      return factory(Backbone, _);\r\n    });\r\n  } else if (typeof exports !== 'undefined') {\r\n    var Backbone = require('backbone');\r\n    var _ = require('underscore');\r\n    module.exports = factory(Backbone, _);\r\n  } else {\r\n    factory(root.Backbone, root._);\r\n  }\r\n\r\n}(this, function(Backbone, _) {\r\n  \"use strict\";\r\n\r\n  var previousWreqr = Backbone.Wreqr;\r\n\r\n  var Wreqr = Backbone.Wreqr = {};\r\n\r\n  Backbone.Wreqr.VERSION = '1.3.1';\r\n\r\n  Backbone.Wreqr.noConflict = function () {\r\n    Backbone.Wreqr = previousWreqr;\r\n    return this;\r\n  };\r\n\r\n  // Handlers\r\n  // --------\r\n  // A registry of functions to call, given a name\r\n  \r\n  Wreqr.Handlers = (function(Backbone, _){\r\n    \"use strict\";\r\n    \r\n    // Constructor\r\n    // -----------\r\n  \r\n    var Handlers = function(options){\r\n      this.options = options;\r\n      this._wreqrHandlers = {};\r\n      \r\n      if (_.isFunction(this.initialize)){\r\n        this.initialize(options);\r\n      }\r\n    };\r\n  \r\n    Handlers.extend = Backbone.Model.extend;\r\n  \r\n    // Instance Members\r\n    // ----------------\r\n  \r\n    _.extend(Handlers.prototype, Backbone.Events, {\r\n  \r\n      // Add multiple handlers using an object literal configuration\r\n      setHandlers: function(handlers){\r\n        _.each(handlers, function(handler, name){\r\n          var context = null;\r\n  \r\n          if (_.isObject(handler) && !_.isFunction(handler)){\r\n            context = handler.context;\r\n            handler = handler.callback;\r\n          }\r\n  \r\n          this.setHandler(name, handler, context);\r\n        }, this);\r\n      },\r\n  \r\n      // Add a handler for the given name, with an\r\n      // optional context to run the handler within\r\n      setHandler: function(name, handler, context){\r\n        var config = {\r\n          callback: handler,\r\n          context: context\r\n        };\r\n  \r\n        this._wreqrHandlers[name] = config;\r\n  \r\n        this.trigger(\"handler:add\", name, handler, context);\r\n      },\r\n  \r\n      // Determine whether or not a handler is registered\r\n      hasHandler: function(name){\r\n        return !! this._wreqrHandlers[name];\r\n      },\r\n  \r\n      // Get the currently registered handler for\r\n      // the specified name. Throws an exception if\r\n      // no handler is found.\r\n      getHandler: function(name){\r\n        var config = this._wreqrHandlers[name];\r\n  \r\n        if (!config){\r\n          return;\r\n        }\r\n  \r\n        return function(){\r\n          var args = Array.prototype.slice.apply(arguments);\r\n          return config.callback.apply(config.context, args);\r\n        };\r\n      },\r\n  \r\n      // Remove a handler for the specified name\r\n      removeHandler: function(name){\r\n        delete this._wreqrHandlers[name];\r\n      },\r\n  \r\n      // Remove all handlers from this registry\r\n      removeAllHandlers: function(){\r\n        this._wreqrHandlers = {};\r\n      }\r\n    });\r\n  \r\n    return Handlers;\r\n  })(Backbone, _);\r\n  \r\n  // Wreqr.CommandStorage\r\n  // --------------------\r\n  //\r\n  // Store and retrieve commands for execution.\r\n  Wreqr.CommandStorage = (function(){\r\n    \"use strict\";\r\n  \r\n    // Constructor function\r\n    var CommandStorage = function(options){\r\n      this.options = options;\r\n      this._commands = {};\r\n  \r\n      if (_.isFunction(this.initialize)){\r\n        this.initialize(options);\r\n      }\r\n    };\r\n  \r\n    // Instance methods\r\n    _.extend(CommandStorage.prototype, Backbone.Events, {\r\n  \r\n      // Get an object literal by command name, that contains\r\n      // the `commandName` and the `instances` of all commands\r\n      // represented as an array of arguments to process\r\n      getCommands: function(commandName){\r\n        var commands = this._commands[commandName];\r\n  \r\n        // we don't have it, so add it\r\n        if (!commands){\r\n  \r\n          // build the configuration\r\n          commands = {\r\n            command: commandName, \r\n            instances: []\r\n          };\r\n  \r\n          // store it\r\n          this._commands[commandName] = commands;\r\n        }\r\n  \r\n        return commands;\r\n      },\r\n  \r\n      // Add a command by name, to the storage and store the\r\n      // args for the command\r\n      addCommand: function(commandName, args){\r\n        var command = this.getCommands(commandName);\r\n        command.instances.push(args);\r\n      },\r\n  \r\n      // Clear all commands for the given `commandName`\r\n      clearCommands: function(commandName){\r\n        var command = this.getCommands(commandName);\r\n        command.instances = [];\r\n      }\r\n    });\r\n  \r\n    return CommandStorage;\r\n  })();\r\n  \r\n  // Wreqr.Commands\r\n  // --------------\r\n  //\r\n  // A simple command pattern implementation. Register a command\r\n  // handler and execute it.\r\n  Wreqr.Commands = (function(Wreqr){\r\n    \"use strict\";\r\n  \r\n    return Wreqr.Handlers.extend({\r\n      // default storage type\r\n      storageType: Wreqr.CommandStorage,\r\n  \r\n      constructor: function(options){\r\n        this.options = options || {};\r\n  \r\n        this._initializeStorage(this.options);\r\n        this.on(\"handler:add\", this._executeCommands, this);\r\n  \r\n        var args = Array.prototype.slice.call(arguments);\r\n        Wreqr.Handlers.prototype.constructor.apply(this, args);\r\n      },\r\n  \r\n      // Execute a named command with the supplied args\r\n      execute: function(name, args){\r\n        name = arguments[0];\r\n        args = Array.prototype.slice.call(arguments, 1);\r\n  \r\n        if (this.hasHandler(name)){\r\n          this.getHandler(name).apply(this, args);\r\n        } else {\r\n          this.storage.addCommand(name, args);\r\n        }\r\n  \r\n      },\r\n  \r\n      // Internal method to handle bulk execution of stored commands\r\n      _executeCommands: function(name, handler, context){\r\n        var command = this.storage.getCommands(name);\r\n  \r\n        // loop through and execute all the stored command instances\r\n        _.each(command.instances, function(args){\r\n          handler.apply(context, args);\r\n        });\r\n  \r\n        this.storage.clearCommands(name);\r\n      },\r\n  \r\n      // Internal method to initialize storage either from the type's\r\n      // `storageType` or the instance `options.storageType`.\r\n      _initializeStorage: function(options){\r\n        var storage;\r\n  \r\n        var StorageType = options.storageType || this.storageType;\r\n        if (_.isFunction(StorageType)){\r\n          storage = new StorageType();\r\n        } else {\r\n          storage = StorageType;\r\n        }\r\n  \r\n        this.storage = storage;\r\n      }\r\n    });\r\n  \r\n  })(Wreqr);\r\n  \r\n  // Wreqr.RequestResponse\r\n  // ---------------------\r\n  //\r\n  // A simple request/response implementation. Register a\r\n  // request handler, and return a response from it\r\n  Wreqr.RequestResponse = (function(Wreqr){\r\n    \"use strict\";\r\n  \r\n    return Wreqr.Handlers.extend({\r\n      request: function(){\r\n        var name = arguments[0];\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        if (this.hasHandler(name)) {\r\n          return this.getHandler(name).apply(this, args);\r\n        }\r\n      }\r\n    });\r\n  \r\n  })(Wreqr);\r\n  \r\n  // Event Aggregator\r\n  // ----------------\r\n  // A pub-sub object that can be used to decouple various parts\r\n  // of an application through event-driven architecture.\r\n  \r\n  Wreqr.EventAggregator = (function(Backbone, _){\r\n    \"use strict\";\r\n    var EA = function(){};\r\n  \r\n    // Copy the `extend` function used by Backbone's classes\r\n    EA.extend = Backbone.Model.extend;\r\n  \r\n    // Copy the basic Backbone.Events on to the event aggregator\r\n    _.extend(EA.prototype, Backbone.Events);\r\n  \r\n    return EA;\r\n  })(Backbone, _);\r\n  \r\n  // Wreqr.Channel\r\n  // --------------\r\n  //\r\n  // An object that wraps the three messaging systems:\r\n  // EventAggregator, RequestResponse, Commands\r\n  Wreqr.Channel = (function(Wreqr){\r\n    \"use strict\";\r\n  \r\n    var Channel = function(channelName) {\r\n      this.vent        = new Backbone.Wreqr.EventAggregator();\r\n      this.reqres      = new Backbone.Wreqr.RequestResponse();\r\n      this.commands    = new Backbone.Wreqr.Commands();\r\n      this.channelName = channelName;\r\n    };\r\n  \r\n    _.extend(Channel.prototype, {\r\n  \r\n      // Remove all handlers from the messaging systems of this channel\r\n      reset: function() {\r\n        this.vent.off();\r\n        this.vent.stopListening();\r\n        this.reqres.removeAllHandlers();\r\n        this.commands.removeAllHandlers();\r\n        return this;\r\n      },\r\n  \r\n      // Connect a hash of events; one for each messaging system\r\n      connectEvents: function(hash, context) {\r\n        this._connect('vent', hash, context);\r\n        return this;\r\n      },\r\n  \r\n      connectCommands: function(hash, context) {\r\n        this._connect('commands', hash, context);\r\n        return this;\r\n      },\r\n  \r\n      connectRequests: function(hash, context) {\r\n        this._connect('reqres', hash, context);\r\n        return this;\r\n      },\r\n  \r\n      // Attach the handlers to a given message system `type`\r\n      _connect: function(type, hash, context) {\r\n        if (!hash) {\r\n          return;\r\n        }\r\n  \r\n        context = context || this;\r\n        var method = (type === 'vent') ? 'on' : 'setHandler';\r\n  \r\n        _.each(hash, function(fn, eventName) {\r\n          this[type][method](eventName, _.bind(fn, context));\r\n        }, this);\r\n      }\r\n    });\r\n  \r\n  \r\n    return Channel;\r\n  })(Wreqr);\r\n  \r\n  // Wreqr.Radio\r\n  // --------------\r\n  //\r\n  // An object that lets you communicate with many channels.\r\n  Wreqr.radio = (function(Wreqr){\r\n    \"use strict\";\r\n  \r\n    var Radio = function() {\r\n      this._channels = {};\r\n      this.vent = {};\r\n      this.commands = {};\r\n      this.reqres = {};\r\n      this._proxyMethods();\r\n    };\r\n  \r\n    _.extend(Radio.prototype, {\r\n  \r\n      channel: function(channelName) {\r\n        if (!channelName) {\r\n          throw new Error('Channel must receive a name');\r\n        }\r\n  \r\n        return this._getChannel( channelName );\r\n      },\r\n  \r\n      _getChannel: function(channelName) {\r\n        var channel = this._channels[channelName];\r\n  \r\n        if(!channel) {\r\n          channel = new Wreqr.Channel(channelName);\r\n          this._channels[channelName] = channel;\r\n        }\r\n  \r\n        return channel;\r\n      },\r\n  \r\n      _proxyMethods: function() {\r\n        _.each(['vent', 'commands', 'reqres'], function(system) {\r\n          _.each( messageSystems[system], function(method) {\r\n            this[system][method] = proxyMethod(this, system, method);\r\n          }, this);\r\n        }, this);\r\n      }\r\n    });\r\n  \r\n  \r\n    var messageSystems = {\r\n      vent: [\r\n        'on',\r\n        'off',\r\n        'trigger',\r\n        'once',\r\n        'stopListening',\r\n        'listenTo',\r\n        'listenToOnce'\r\n      ],\r\n  \r\n      commands: [\r\n        'execute',\r\n        'setHandler',\r\n        'setHandlers',\r\n        'removeHandler',\r\n        'removeAllHandlers'\r\n      ],\r\n  \r\n      reqres: [\r\n        'request',\r\n        'setHandler',\r\n        'setHandlers',\r\n        'removeHandler',\r\n        'removeAllHandlers'\r\n      ]\r\n    };\r\n  \r\n    var proxyMethod = function(radio, system, method) {\r\n      return function(channelName) {\r\n        var messageSystem = radio._getChannel(channelName)[system];\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n  \r\n        return messageSystem[method].apply(messageSystem, args);\r\n      };\r\n    };\r\n  \r\n    return new Radio();\r\n  \r\n  })(Wreqr);\r\n  \r\n\r\n  return Backbone.Wreqr;\r\n\r\n}));\r\n\n","define('views/Questions',['require','exports','module','app','msgbus'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var app = require('app');\r\n    var msgBus = require('msgbus');\r\n    //var moment = require('moment');\r\n    var QuestionsView;\r\n\r\n    var QuestionItem = Backbone.View.extend({\r\n        manage: true,\r\n        template: 'question-item',\r\n        tagName: 'li',\r\n\r\n        events: {\r\n            'click': 'showQuestion'\r\n        },\r\n\r\n        serialize: function () {\r\n            var data = this.model.toJSON();\r\n            return data;\r\n        },\r\n\r\n        /***\r\n         * show Question page\r\n         */\r\n        showQuestion: function () {\r\n            msgBus.commands.execute('question:get', this.model.id);\r\n            app.router.navigate('question/' + this.model.get('questionId'));\r\n        }\r\n\r\n        \r\n    });\r\n\r\n    QuestionsView = Backbone.Layout.extend({\r\n        template: 'questions',\r\n\r\n        initialize: function () {\r\n            msgBus.commands.execute('scroll:top');\r\n        },\r\n\r\n        beforeRender: function () {\r\n            console.log(this.collection);\r\n            this.collection.each(function (item) {\r\n\r\n                this.insertView('.questions-list', new QuestionItem({\r\n                    model: item\r\n                }));\r\n\r\n            }, this);\r\n        }\r\n\r\n    });\r\n\r\n    module.exports = QuestionsView;\r\n});\n","define('entities/questions',['require','backbone','msgbus'],function (require) {\r\n\r\n    /*jshint camelcase: false */\r\n    'use strict';\r\n\r\n    //var app = require('app');\r\n    var Backbone = require('backbone');\r\n    var msgBus = require('msgbus');\r\n    var Entities = {};\r\n\r\n    Entities.Question = Backbone.Model.extend({\r\n        idAttribute: 'question_id',\r\n        defaults: {\r\n            tags: null,\r\n            owner: null,\r\n            is_answered: null,\r\n            view_count: null,\r\n            accepted_answer_id: null,\r\n            answer_count: null,\r\n            score: null,\r\n            last_activity_date: null,\r\n            creation_date: null,\r\n            last_edit_date: null,\r\n            link: null,\r\n            title: null\r\n        }\r\n    });\r\n\r\n    Entities.QuestionCollection = Backbone.Collection.extend({\r\n        model: Entities.Question,\r\n        parse : function(response){\r\n            return response.items;  \r\n        }, \r\n        url: function () {\r\n            return 'https://api.stackexchange.com/2.2/questions?order=desc&sort=activity&site=stackoverflow';\r\n        }\r\n    });\r\n\r\n    var API = {\r\n\r\n        getQuestionsEntities: function () {\r\n            var collection = new Entities.QuestionCollection();\r\n            var defer = $.Deferred();\r\n            // show loading view  while fetching data\r\n            msgBus.trigger('loading:show', {message: 'Loading...'});\r\n\r\n                collection.fetch({\r\n                    success: function (data) {\r\n                        defer.resolve(data);\r\n                        msgBus.trigger('loading:hide');\r\n                    },\r\n                    error: function (model, jqXHR, textStatus) {\r\n                        msgBus.trigger('loading:hide');\r\n                        defer.reject(model, jqXHR, textStatus);\r\n                    }\r\n                });\r\n\r\n            return defer.promise();\r\n        }\r\n\r\n    };\r\n\r\n    msgBus.commands.setHandler('questions:entities', function () {\r\n        return API.getQuestionsEntities();\r\n    });\r\n\r\n\r\n});\r\n\n","define('controllers/questions',['require','exports','module','app','msgbus','views/Questions','entities/questions'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var app = require('app');\r\n    var msgBus = require('msgbus');\r\n    var QuestionsView = require('views/Questions');\r\n    /*var HeaderView = require('views/header');\r\n    var BreadCrumbView = require('views/breadcrumb');*/\r\n    var controller = {};\r\n\r\n    controller.getQuestions = function () {\r\n        require('entities/questions');\r\n        \r\n        var fetchingQuestions = msgBus.reqres.request('questions:entities');\r\n        console.log('fetchingQuestions :: ', fetchingQuestions);\r\n        $.when(fetchingQuestions).then(function (questions) {\r\n            \r\n            /*msgBus.commands.execute('store:set', {\r\n                clientName: Questions.at(0).get('clientName'),\r\n                clientId: Questions.at(0).get('clientId'),\r\n                pageTitle: 'Questions'\r\n            });\r\n           \r\n            app.layout.setView('.header', new HeaderView({\r\n                model: new Backbone.Model({\r\n                    pageTitle: 'Questions',\r\n                    updatedAt: null   // do not show last modified on equifit list page\r\n                })\r\n            }));\r\n\r\n            app.layout.setView('.navigation', new BreadCrumbView({\r\n                model: new Backbone.Model({\r\n                    breadCrumbId: 'Questions'\r\n                })\r\n            }));*/\r\n            console.log(questions);\r\n            app.layout.setView('.main-container', new QuestionsView({\r\n                collection: questions\r\n            }));\r\n            app.layout.render();\r\n        });\r\n\r\n        $.when(fetchingQuestions).fail(function (model, jqXHR, textStatus) {\r\n            msgBus.trigger('blizzard:error',  model, jqXHR, textStatus);\r\n        });\r\n    };\r\n\r\n    module.exports = controller;\r\n});\n","define('views/question',['require','exports','module','backbone','msgbus'],function (require, exports, module) {\n\t'use strict';\n\n\t//var app = require('app');\n\tvar Backbone = require('backbone');\n    var msgBus = require('msgbus');\n    //var moment = require('moment');\n    var QuestionView;\n\n    var QuestionDetails = Backbone.View.extend({\n        manage: true,\n        template: 'question-details',\n\n        serialize: function () {\n            var data = this.model.toJSON();\n            return data;\n        }\n\n        \n    });\n\n\n    QuestionView = Backbone.Layout.extend({\n        template: 'question',\n        initialize: function () {\n            msgBus.commands.execute('scroll:top');\n        },\n\n        beforeRender: function () {\n        \tthis.insertView('.question-details', new QuestionDetails({\n        \t\tmodel: this.model\n        \t}));\n        }\n\n\n    });\n\n\n\tmodule.exports = QuestionView;\n\n});\n","define('controllers/question',['require','exports','module','app','msgbus','views/question','entities/questions'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var app = require('app');\r\n    var msgBus = require('msgbus');\r\n    var QuestionView = require('views/question');\r\n    //var moment = require('moment');\r\n    //var HeaderView = require('views/header');\r\n    var controller = {};\r\n\r\n    controller.getQuestion = function (questionId) {\r\n        app.globalModel.set('questionID', questionId);\r\n        require('entities/questions');\r\n        var fetchingQuestion = msgBus.reqres.request('question:entities');\r\n\r\n        $.when(fetchingQuestion).then(function (question) {\r\n        \r\n            app.layout.setView('.main-container', new QuestionView({\r\n                model: question\r\n            }));\r\n\r\n            app.layout.render();\r\n        });\r\n\r\n        $.when(fetchingQuestion).fail(function (model, jqXHR, textStatus) {\r\n            msgBus.trigger('blizzard:error', model, jqXHR, textStatus);\r\n        });\r\n    };\r\n\r\n    \r\n\r\n    module.exports = controller;\r\n});\r\n\n","define('controllers/helper',['require','exports','module'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var helperModule = {};\r\n\r\n    helperModule.scrollTop = function () {\r\n        $(document).scrollTop(0);\r\n        $('#main').css({ opacity: 0 }).animate({ opacity: 1 }, 400);\r\n    };\r\n\r\n    module.exports = helperModule;\r\n});\n","/**\n * Copyright (c) 2011-2014 Felix Gnass\n * Licensed under the MIT license\n * http://spin.js.org/\n *\n * Example:\n    var opts = {\n      lines: 12             // The number of lines to draw\n    , length: 7             // The length of each line\n    , width: 5              // The line thickness\n    , radius: 10            // The radius of the inner circle\n    , scale: 1.0            // Scales overall size of the spinner\n    , corners: 1            // Roundness (0..1)\n    , color: '#000'         // #rgb or #rrggbb\n    , opacity: 1/4          // Opacity of the lines\n    , rotate: 0             // Rotation offset\n    , direction: 1          // 1: clockwise, -1: counterclockwise\n    , speed: 1              // Rounds per second\n    , trail: 100            // Afterglow percentage\n    , fps: 20               // Frames per second when using setTimeout()\n    , zIndex: 2e9           // Use a high z-index by default\n    , className: 'spinner'  // CSS class to assign to the element\n    , top: '50%'            // center vertically\n    , left: '50%'           // center horizontally\n    , shadow: false         // Whether to render a shadow\n    , hwaccel: false        // Whether to use hardware acceleration (might be buggy)\n    , position: 'absolute'  // Element positioning\n    }\n    var target = document.getElementById('foo')\n    var spinner = new Spinner(opts).spin(target)\n */\n;(function (root, factory) {\n\n  /* CommonJS */\n  if (typeof module == 'object' && module.exports) module.exports = factory()\n\n  /* AMD module */\n  else if (typeof define == 'function' && define.amd) define('spin',factory)\n\n  /* Browser global */\n  else root.Spinner = factory()\n}(this, function () {\n  \"use strict\"\n\n  var prefixes = ['webkit', 'Moz', 'ms', 'O'] /* Vendor prefixes */\n    , animations = {} /* Animation rules keyed by their name */\n    , useCssAnimations /* Whether to use CSS animations or setTimeout */\n    , sheet /* A stylesheet to hold the @keyframe or VML rules. */\n\n  /**\n   * Utility function to create elements. If no tag name is given,\n   * a DIV is created. Optionally properties can be passed.\n   */\n  function createEl (tag, prop) {\n    var el = document.createElement(tag || 'div')\n      , n\n\n    for (n in prop) el[n] = prop[n]\n    return el\n  }\n\n  /**\n   * Appends children and returns the parent.\n   */\n  function ins (parent /* child1, child2, ...*/) {\n    for (var i = 1, n = arguments.length; i < n; i++) {\n      parent.appendChild(arguments[i])\n    }\n\n    return parent\n  }\n\n  /**\n   * Creates an opacity keyframe animation rule and returns its name.\n   * Since most mobile Webkits have timing issues with animation-delay,\n   * we create separate rules for each line/segment.\n   */\n  function addAnimation (alpha, trail, i, lines) {\n    var name = ['opacity', trail, ~~(alpha * 100), i, lines].join('-')\n      , start = 0.01 + i/lines * 100\n      , z = Math.max(1 - (1-alpha) / trail * (100-start), alpha)\n      , prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase()\n      , pre = prefix && '-' + prefix + '-' || ''\n\n    if (!animations[name]) {\n      sheet.insertRule(\n        '@' + pre + 'keyframes ' + name + '{' +\n        '0%{opacity:' + z + '}' +\n        start + '%{opacity:' + alpha + '}' +\n        (start+0.01) + '%{opacity:1}' +\n        (start+trail) % 100 + '%{opacity:' + alpha + '}' +\n        '100%{opacity:' + z + '}' +\n        '}', sheet.cssRules.length)\n\n      animations[name] = 1\n    }\n\n    return name\n  }\n\n  /**\n   * Tries various vendor prefixes and returns the first supported property.\n   */\n  function vendor (el, prop) {\n    var s = el.style\n      , pp\n      , i\n\n    prop = prop.charAt(0).toUpperCase() + prop.slice(1)\n    if (s[prop] !== undefined) return prop\n    for (i = 0; i < prefixes.length; i++) {\n      pp = prefixes[i]+prop\n      if (s[pp] !== undefined) return pp\n    }\n  }\n\n  /**\n   * Sets multiple style properties at once.\n   */\n  function css (el, prop) {\n    for (var n in prop) {\n      el.style[vendor(el, n) || n] = prop[n]\n    }\n\n    return el\n  }\n\n  /**\n   * Fills in default values.\n   */\n  function merge (obj) {\n    for (var i = 1; i < arguments.length; i++) {\n      var def = arguments[i]\n      for (var n in def) {\n        if (obj[n] === undefined) obj[n] = def[n]\n      }\n    }\n    return obj\n  }\n\n  /**\n   * Returns the line color from the given string or array.\n   */\n  function getColor (color, idx) {\n    return typeof color == 'string' ? color : color[idx % color.length]\n  }\n\n  // Built-in defaults\n\n  var defaults = {\n    lines: 12             // The number of lines to draw\n  , length: 7             // The length of each line\n  , width: 5              // The line thickness\n  , radius: 10            // The radius of the inner circle\n  , scale: 1.0            // Scales overall size of the spinner\n  , corners: 1            // Roundness (0..1)\n  , color: '#000'         // #rgb or #rrggbb\n  , opacity: 1/4          // Opacity of the lines\n  , rotate: 0             // Rotation offset\n  , direction: 1          // 1: clockwise, -1: counterclockwise\n  , speed: 1              // Rounds per second\n  , trail: 100            // Afterglow percentage\n  , fps: 20               // Frames per second when using setTimeout()\n  , zIndex: 2e9           // Use a high z-index by default\n  , className: 'spinner'  // CSS class to assign to the element\n  , top: '50%'            // center vertically\n  , left: '50%'           // center horizontally\n  , shadow: false         // Whether to render a shadow\n  , hwaccel: false        // Whether to use hardware acceleration (might be buggy)\n  , position: 'absolute'  // Element positioning\n  }\n\n  /** The constructor */\n  function Spinner (o) {\n    this.opts = merge(o || {}, Spinner.defaults, defaults)\n  }\n\n  // Global defaults that override the built-ins:\n  Spinner.defaults = {}\n\n  merge(Spinner.prototype, {\n    /**\n     * Adds the spinner to the given target element. If this instance is already\n     * spinning, it is automatically removed from its previous target b calling\n     * stop() internally.\n     */\n    spin: function (target) {\n      this.stop()\n\n      var self = this\n        , o = self.opts\n        , el = self.el = createEl(null, {className: o.className})\n\n      css(el, {\n        position: o.position\n      , width: 0\n      , zIndex: o.zIndex\n      , left: o.left\n      , top: o.top\n      })\n\n      if (target) {\n        target.insertBefore(el, target.firstChild || null)\n      }\n\n      el.setAttribute('role', 'progressbar')\n      self.lines(el, self.opts)\n\n      if (!useCssAnimations) {\n        // No CSS animation support, use setTimeout() instead\n        var i = 0\n          , start = (o.lines - 1) * (1 - o.direction) / 2\n          , alpha\n          , fps = o.fps\n          , f = fps / o.speed\n          , ostep = (1 - o.opacity) / (f * o.trail / 100)\n          , astep = f / o.lines\n\n        ;(function anim () {\n          i++\n          for (var j = 0; j < o.lines; j++) {\n            alpha = Math.max(1 - (i + (o.lines - j) * astep) % f * ostep, o.opacity)\n\n            self.opacity(el, j * o.direction + start, alpha, o)\n          }\n          self.timeout = self.el && setTimeout(anim, ~~(1000 / fps))\n        })()\n      }\n      return self\n    }\n\n    /**\n     * Stops and removes the Spinner.\n     */\n  , stop: function () {\n      var el = this.el\n      if (el) {\n        clearTimeout(this.timeout)\n        if (el.parentNode) el.parentNode.removeChild(el)\n        this.el = undefined\n      }\n      return this\n    }\n\n    /**\n     * Internal method that draws the individual lines. Will be overwritten\n     * in VML fallback mode below.\n     */\n  , lines: function (el, o) {\n      var i = 0\n        , start = (o.lines - 1) * (1 - o.direction) / 2\n        , seg\n\n      function fill (color, shadow) {\n        return css(createEl(), {\n          position: 'absolute'\n        , width: o.scale * (o.length + o.width) + 'px'\n        , height: o.scale * o.width + 'px'\n        , background: color\n        , boxShadow: shadow\n        , transformOrigin: 'left'\n        , transform: 'rotate(' + ~~(360/o.lines*i + o.rotate) + 'deg) translate(' + o.scale*o.radius + 'px' + ',0)'\n        , borderRadius: (o.corners * o.scale * o.width >> 1) + 'px'\n        })\n      }\n\n      for (; i < o.lines; i++) {\n        seg = css(createEl(), {\n          position: 'absolute'\n        , top: 1 + ~(o.scale * o.width / 2) + 'px'\n        , transform: o.hwaccel ? 'translate3d(0,0,0)' : ''\n        , opacity: o.opacity\n        , animation: useCssAnimations && addAnimation(o.opacity, o.trail, start + i * o.direction, o.lines) + ' ' + 1 / o.speed + 's linear infinite'\n        })\n\n        if (o.shadow) ins(seg, css(fill('#000', '0 0 4px #000'), {top: '2px'}))\n        ins(el, ins(seg, fill(getColor(o.color, i), '0 0 1px rgba(0,0,0,.1)')))\n      }\n      return el\n    }\n\n    /**\n     * Internal method that adjusts the opacity of a single line.\n     * Will be overwritten in VML fallback mode below.\n     */\n  , opacity: function (el, i, val) {\n      if (i < el.childNodes.length) el.childNodes[i].style.opacity = val\n    }\n\n  })\n\n\n  function initVML () {\n\n    /* Utility function to create a VML tag */\n    function vml (tag, attr) {\n      return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr)\n    }\n\n    // No CSS transforms but VML support, add a CSS rule for VML elements:\n    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)')\n\n    Spinner.prototype.lines = function (el, o) {\n      var r = o.scale * (o.length + o.width)\n        , s = o.scale * 2 * r\n\n      function grp () {\n        return css(\n          vml('group', {\n            coordsize: s + ' ' + s\n          , coordorigin: -r + ' ' + -r\n          })\n        , { width: s, height: s }\n        )\n      }\n\n      var margin = -(o.width + o.length) * o.scale * 2 + 'px'\n        , g = css(grp(), {position: 'absolute', top: margin, left: margin})\n        , i\n\n      function seg (i, dx, filter) {\n        ins(\n          g\n        , ins(\n            css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx})\n          , ins(\n              css(\n                vml('roundrect', {arcsize: o.corners})\n              , { width: r\n                , height: o.scale * o.width\n                , left: o.scale * o.radius\n                , top: -o.scale * o.width >> 1\n                , filter: filter\n                }\n              )\n            , vml('fill', {color: getColor(o.color, i), opacity: o.opacity})\n            , vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n            )\n          )\n        )\n      }\n\n      if (o.shadow)\n        for (i = 1; i <= o.lines; i++) {\n          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)')\n        }\n\n      for (i = 1; i <= o.lines; i++) seg(i)\n      return ins(el, g)\n    }\n\n    Spinner.prototype.opacity = function (el, i, val, o) {\n      var c = el.firstChild\n      o = o.shadow && o.lines || 0\n      if (c && i + o < c.childNodes.length) {\n        c = c.childNodes[i + o]; c = c && c.firstChild; c = c && c.firstChild\n        if (c) c.opacity = val\n      }\n    }\n  }\n\n  if (typeof document !== 'undefined') {\n    sheet = (function () {\n      var el = createEl('style', {type : 'text/css'})\n      ins(document.getElementsByTagName('head')[0], el)\n      return el.sheet || el.styleSheet\n    }())\n\n    var probe = css(createEl('group'), {behavior: 'url(#default#VML)'})\n\n    if (!vendor(probe, 'transform') && probe.adj) initVML()\n    else useCssAnimations = vendor(probe, 'animation')\n  }\n\n  return Spinner\n\n}));\n\n","define('views/loading',['require','exports','module','backbone','spin'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var Backbone = require('backbone');\r\n    var Spinner = require('spin');\r\n    var LoadingViewModule;\r\n\r\n    LoadingViewModule =  Backbone.View.extend({\r\n        manage: true,\r\n        id: 'spinner',\r\n\r\n        initialize: function () {\r\n            this.opts = {\r\n                lines: 13, // The number of lines to draw\r\n                length: 7, // The length of each line\r\n                width: 2, // The line thickness\r\n                radius: 10, // The radius of the inner circle\r\n                corners: 0, // Corner roundness (0..1)\r\n                rotate: 0, // The rotation offset\r\n                direction: 1, // 1: clockwise, -1: counterclockwise\r\n                color: '#000', // #rgb or #rrggbb\r\n                speed: 1, // Rounds per second\r\n                trail: 52, // Afterglow percentage\r\n                shadow: false, // Whether to render a shadow\r\n                hwaccel: false, // Whether to use hardware acceleration\r\n                className: 'spinner', // The CSS class to assign to the spinner\r\n                zIndex: 2e9 // The z-index (defaults to 2000000000)\r\n            };\r\n        },\r\n\r\n        afterRender: function () {\r\n            new Spinner(this.opts).spin(document.getElementById(this.el.id));\r\n            $('.' + this.opts.className).prepend(\r\n                '<div class=\"block-view\"></div><div class=\"spinner-block\"><small>' + this.model.get('message') + '</small></div>'\r\n            );\r\n        }\r\n    });\r\n\r\n    module.exports = LoadingViewModule;\r\n});\n","define('controllers/loading',['require','exports','module','backbone','views/loading'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var Backbone = require('backbone');\r\n    var LoadingView = require('views/loading');\r\n    var loadinglModule = {};\r\n\r\n    var layout = new Backbone.Layout({\r\n        el: 'body'\r\n    });\r\n\r\n    loadinglModule.show = function (options) {\r\n        options = options || {message: 'Loading...'};\r\n        layout.insertView('', new LoadingView({\r\n            model: new Backbone.Model(options)\r\n        })).render();\r\n    };\r\n\r\n    loadinglModule.hide = function () {\r\n        layout.removeView(function(nestedView){\r\n            nestedView.remove();\r\n        });\r\n    };\r\n\r\n    module.exports = loadinglModule;\r\n});\r\n\n","define('views/error',['require','exports','module','backbone'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var Backbone = require('backbone');\r\n    var ErrorModule;\r\n\r\n    ErrorModule =  Backbone.View.extend({\r\n        manage: true,\r\n        template: 'error',\r\n\r\n        initialize: function (){\r\n            console.log('Error in the view ', this.model.toJSON());\r\n            this.title = this.model.get('statusText') || 'Error';\r\n            this.status = this.model.get('status') || null;\r\n            this.message = this.model.get('responseJSON') || null;\r\n        },\r\n\r\n        serialize: function () {\r\n            return {\r\n                title: this.title,\r\n                status: this.status,\r\n                message: this.message.message\r\n            };\r\n        }\r\n    });\r\n\r\n    module.exports = ErrorModule;\r\n});\n","define('controllers/error',['require','exports','module','app','msgbus','views/error'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var app = require('app');\r\n    var msgBus = require('msgbus');\r\n    var ErrorView = require('views/error');\r\n    //var HeaderView = require('views/header');\r\n    var errorModule = {};\r\n\r\n    errorModule.init = function (model, jqXHR) {\r\n        /***\r\n         * update url\r\n         */\r\n        app.router.navigate('error');\r\n\r\n        msgBus.trigger('global:set', {\r\n            title: 'Error'\r\n        });\r\n\r\n        //app.layout.setView('.header', new HeaderView());\r\n        app.layout.setView('.main-container', new ErrorView ({\r\n            model: new Backbone.Model(jqXHR)\r\n        }));\r\n        app.layout.render();\r\n    };\r\n\r\n    module.exports = errorModule;\r\n});\n","define('msgbus',['require','exports','module','app','backbone.wreqr'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var app = require('app');\r\n    var Wreqr = require('backbone.wreqr');\r\n\r\n    var msgBus = {\r\n        reqres: new Wreqr.RequestResponse(),\r\n        commands: new Wreqr.Commands(),\r\n        events: new Wreqr.EventAggregator()\r\n    };\r\n\r\n    \r\n    /***\r\n     * Get Questions\r\n     */\r\n    msgBus.commands.setHandler('questions:get', function(){\r\n        require(['controllers/questions'], function (controller) {\r\n            controller.getQuestions();\r\n        });\r\n    });\r\n\r\n    /***\r\n     * Get Question\r\n     */\r\n    msgBus.commands.setHandler('question:get', function(questionId){\r\n        require(['controllers/question'], function (controller) {\r\n            controller.getQuestion(questionId);\r\n        });\r\n    });\r\n\r\n    /***\r\n     * Helper Event triggers\r\n     * @type {Object}\r\n     */\r\n    msgBus.commands.setHandler('scroll:top', function () {\r\n        require(['controllers/helper'], function (controller) {\r\n            controller.scrollTop();\r\n        });\r\n    });\r\n\r\n    /***\r\n     * Set Data Storage\r\n     */\r\n    msgBus.commands.setHandler('global:set', function(options){\r\n        app.globalModel.set(options);\r\n    });\r\n\r\n\r\n    /***\r\n     * Show loading view\r\n     */\r\n    msgBus.commands.setHandler('loading:show', function(options){\r\n        require(['controllers/loading'], function (controller) {\r\n            controller.show(options);\r\n        });\r\n    });\r\n\r\n    /***\r\n     * Hide loading view\r\n     */\r\n    msgBus.commands.setHandler('loading:hide', function(){\r\n        require(['controllers/loading'], function (controller) {\r\n            controller.hide();\r\n        });\r\n    });\r\n\r\n    msgBus.commands.setHandler('blizzard:error', function(model, jqXHR, textStatus){\r\n        require(['controllers/error'], function (controller) {\r\n            controller.init(model, jqXHR, textStatus);\r\n        });\r\n    });\r\n\r\n    module.exports = msgBus;\r\n});\n","define('router',['require','exports','module','backbone','msgbus'],function (require, exports, module) {\r\n    'use strict';\r\n\r\n    var Backbone = require('backbone');\r\n    var msgBus = require('msgbus');\r\n\r\n    var Router = Backbone.Router.extend({\r\n\r\n        routes: {\r\n            '': 'questions',\r\n            'question/:id': 'question',\r\n            'error': 'errorPage'\r\n        },\r\n\r\n        questions: function () {\r\n            console.log('here bitch');\r\n            msgBus.commands.execute('questions:get');\r\n        },\r\n\r\n        question: function (questionId) {\r\n            msgBus.commands.execute('global:set', {\r\n                questionID: questionId\r\n            });\r\n            msgBus.commands.execute('question:get', questionId);\r\n        },\r\n\r\n        errorPage: function () {\r\n            console.log('route error');\r\n            return msgBus.commands.execute('equifit:error');\r\n        }\r\n    });\r\n\r\n    module.exports = Router;\r\n});\r\n\n","// Kick off the application.\r\nrequire(['app', 'router'], function (app, Router) {\r\n    'use strict';\r\n\r\n    // Define your master router on the application namespace and trigger all\r\n    // navigation from this instance.\r\n    app.router = new Router();\r\n\r\n    // Trigger the initial route and enable HTML5 History API support, set the\r\n    // root folder to '/' by default.  Change in app.js.\r\n    Backbone.history.start({ pushState: true, root: '/blizzard-application/' });\r\n\r\n\r\n    // All navigation that is relative should be passed through the navigate\r\n    // method, to be processed by the router. If the link has a `data-bypass`\r\n    // attribute, bypass the delegation completely.\r\n    $(document).on('click', 'a[href]:not([data-bypass])', function (e) {\r\n        // Get the absolute anchor href.\r\n        var href = { prop: $(this).prop('href'), attr: $(this).attr('href') };\r\n        // Get the absolute root.\r\n        var root = location.protocol + '//' + location.host + app.root;\r\n\r\n        // Ensure the root is part of the anchor href, meaning it's relative.\r\n        if (href.prop.slice(0, root.length) === root) {\r\n            // Stop the default event to ensure the link will not cause a page\r\n            // refresh.\r\n            e.preventDefault();\r\n\r\n            // `Backbone.history.navigate` is sufficient for all Routers and will\r\n            // trigger the correct events. The Router's internal `navigate` method\r\n            // calls this anyways.  The fragment is sliced from the root.\r\n            Backbone.history.navigate(href.attr, true);\r\n        }\r\n    });\r\n});\r\n\ndefine(\"main\", function(){});\n\n"]}